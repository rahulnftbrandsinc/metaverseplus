var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
/** @jsx jsx */
import { Fragment, useCallback } from 'react';
import { css, jsx } from '@storybook/theming';
import { FlexBar, IconButton, Icons, Placeholder, Separator } from '@storybook/components';
import { Document, Page } from 'react-pdf/dist/entry.webpack';
import { Pan } from './Pan';
import { ZoomButtons } from './ZoomButtons';
import { usePage } from './hooks/usePage';
import { useZoom } from './hooks/useZoom';
var loadingMessage = jsx(Placeholder, null, "Loading PDF...");
export var Pdf = function (_a) {
    var config = _a.config;
    var page = usePage(config.page);
    var onLoadPdf = useCallback(function (doc) {
        page.init(doc.numPages);
    }, [page.init]);
    var _b = useZoom(config.scale || 1, [
        config.scale
    ]), scale = _b.scale, zoomIn = _b.zoomIn, zoomOut = _b.zoomOut, resetZoom = _b.resetZoom;
    return (jsx("div", { css: $container },
        jsx(FlexBar, { border: true },
            jsx(Fragment, { key: "left" },
                jsx("p", null,
                    jsx("b", null, "PDF")),
                jsx(Separator, null),
                jsx(ZoomButtons, { onReset: resetZoom, onZoomIn: zoomIn, onZoomOut: zoomOut }),
                jsx(Separator, null),
                jsx(IconButton, { css: $disabled, onClick: page.prev, disabled: page.isFirst },
                    jsx(Icons, { icon: "arrowleft" })),
                jsx("div", { css: $pageIndicator },
                    page.current,
                    " / ",
                    page.total),
                jsx(IconButton, { css: $disabled, onClick: page.next, disabled: page.isLast },
                    jsx(Icons, { icon: "arrowright" })))),
        jsx(Pan, { css: $pdf, defaultValue: config.offset },
            jsx(Document, { file: config.url, loading: loadingMessage, onLoadSuccess: onLoadPdf },
                jsx(Page, { css: $page, loading: loadingMessage, pageNumber: page.current, scale: scale })))));
};
export default Pdf;
var $container = css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n"], ["\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n"])));
var $disabled = function (theme) { return css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  &[disabled] {\n    color: ", ";\n    cursor: not-allowed;\n  }\n"], ["\n  &[disabled] {\n    color: ", ";\n    cursor: not-allowed;\n  }\n"])), theme.color.medium); };
var $pdf = css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  flex-grow: 1;\n"], ["\n  flex-grow: 1;\n"])));
var $page = css(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  position: absolute !important;\n  top: 50%;\n  left: 50%;\n  display: inline-block;\n\n  border-radius: 1px;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.15);\n\n  transform: translate(-50%, -50%);\n"], ["\n  position: absolute !important;\n  top: 50%;\n  left: 50%;\n  display: inline-block;\n\n  border-radius: 1px;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.15);\n\n  transform: translate(-50%, -50%);\n"])));
var $pageIndicator = css(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  display: flex;\n  align-items: center;\n"], ["\n  display: flex;\n  align-items: center;\n"])));
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;
