/** @jsx jsx */
import { useEffect, useState } from 'react';
import { jsx } from '@storybook/theming';
import { STORY_CHANGED } from '@storybook/core-events';
import { Events, ParameterName } from '../../addon';
import { Wrapper as Pure } from '../components/Wrapper';
export var Wrapper = function (_a) {
    var active = _a.active, api = _a.api, channel = _a.channel;
    var _b = useState(), config = _b[0], setConfig = _b[1];
    var _c = useState(), storyId = _c[0], changeStory = _c[1];
    useEffect(function () {
        var onStoryChanged = function (id) {
            changeStory(id);
            var cfg = api.getParameters(id, ParameterName);
            setConfig(function (prev) { return (cfg !== prev ? cfg : prev); });
        };
        channel.on(Events.UpdateConfig, setConfig);
        channel.on(STORY_CHANGED, onStoryChanged);
        return function () {
            channel.removeListener(Events.UpdateConfig, setConfig);
            channel.removeListener(STORY_CHANGED, onStoryChanged);
        };
    }, []);
    if (!active) {
        return null;
    }
    return jsx(Pure, { key: storyId, config: config });
};
export default Wrapper;
