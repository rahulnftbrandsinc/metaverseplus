{"version":3,"sources":["../source/field.js"],"names":["Field","props","context","listContext","FormField","field","onChange","args","event","value","preventDefault","target","hasBeenEdited","dispatch","getName","undefined","onFocus","onBlur","error","validate","values","focus","mounted","current","node","getNode","console","STATELESS_COMPONENT_HINT","scroll","options","required","getSubmittedValue","isValueEmpty","getRequiredMessage","getValues","register","i","name","getFieldName","onRegisterField","prevProps","onUnregisterField","unregister","showOrHideExternallySetError","showError","showErrors","ReactDOM","findDOMNode","getDOMNode","warn","disabled","component","validationErrors","errors","React","createElement","propTypes","ref","submitting","Component","PropTypes","string","isRequired","elementType","oneOfType","bool","any","func","contextPropType","listContextPropType","number","_","Array","isArray","length"],"mappings":";;;;;;;;;;;;kBAiBwBA,K;;AAjBxB;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;AACA;;AAEA;;;;;;;;;;AAQe,SAASA,KAAT,CAAeC,KAAf,EAAsB;AACpC,QACC;AAAC,eAAD,CAAS,QAAT;AAAA;AACE;AAAA,UACA;AAAC,qBAAD,CAAa,QAAb;AAAA;AACE;AAAA,YACA,8BAAC,SAAD,eACKA,KADL;AAEC,eAASC,OAFV;AAGC,mBAAaC,WAHd,IADA;AAAA;AADF,IADA;AAAA;AADF,EADD;AAcA;;IAEKC,S;;;AAiBL,oBAAYH,KAAZ,EAAmB;AAAA;;AAElB;AACA;AAHkB,oHACZA,KADY;;AAAA,QAFnBI,KAEmB,GAFX,+BAEW;;AAAA,QAkHnBC,QAlHmB,GAkHR,YAAa;AAAA,qCAATC,IAAS;AAATA,QAAS;AAAA;;AAAA,OAChBC,KADgB,GACPD,IADO;;AAEvB,OAAIE,QAAQD,KAAZ;AACA,OAAIA,SAAS,OAAOA,MAAME,cAAb,KAAgC,UAA7C,EAAyD;AACxDD,YAAQD,MAAMG,MAAN,CAAaF,KAArB;AACA;;AAED;AACA;AACA;AACA,SAAKG,aAAL,GAAqB,IAArB;;AAVuB,qBAYO,MAAKX,KAZZ;AAAA,OAYfC,OAZe,eAYfA,OAZe;AAAA,OAYNI,QAZM,eAYNA,QAZM;;;AAcvBJ,WAAQW,QAAR,CAAiB,4BAAc,MAAKC,OAAL,EAAd,EAA8BL,KAA9B,CAAjB;AACAP,WAAQW,QAAR,CAAiB,sCAAwB,MAAKC,OAAL,EAAxB,EAAwCC,SAAxC,CAAjB;;AAEA,OAAIT,QAAJ,EAAc;AACbA,8BAAYC,IAAZ;AACA;AACD,GAtIkB;;AAAA,QAwInBS,OAxImB,GAwIT,UAACR,KAAD,EAAW;AAAA,sBACS,MAAKP,KADd;AAAA,OACZC,OADY,gBACZA,OADY;AAAA,OACHc,OADG,gBACHA,OADG;;AAEpBd,WAAQW,QAAR,CAAiB,2BAAa,MAAKC,OAAL,EAAb,CAAjB;AACA,OAAIE,OAAJ,EAAa;AACZA,YAAQR,KAAR;AACA;AACD,GA9IkB;;AAAA,QAgJnBS,MAhJmB,GAgJV,UAACT,KAAD,EAAW;AAAA,sBACS,MAAKP,KADd;AAAA,OACXC,OADW,gBACXA,OADW;AAAA,OACFe,MADE,gBACFA,MADE;;AAEnB,OAAMC,QAAQ,MAAKC,QAAL,CAAcjB,QAAQkB,MAAR,CAAe,MAAKN,OAAL,EAAf,CAAd,CAAd;AACA,OAAII,KAAJ,EAAW;AACVhB,YAAQW,QAAR,CAAiB,sCAAwB,MAAKC,OAAL,EAAxB,EAAwCI,KAAxC,CAAjB;AACA;AACD,OAAID,MAAJ,EAAY;AACXA,WAAOT,KAAP;AACA;AACD,GAzJkB;;AAAA,QAkLnBa,KAlLmB,GAkLX,YAAM;AACb;AACA;AACA,OAAI,CAAC,MAAKC,OAAV,EAAmB;AAClB;AACA;AACD,OAAI,CAAC,MAAKjB,KAAL,CAAWkB,OAAhB,EAAyB;AACxB;AACA;AACD,OAAI,OAAO,MAAKlB,KAAL,CAAWkB,OAAX,CAAmBF,KAA1B,KAAoC,UAAxC,EAAoD;AACnD,WAAO,MAAKhB,KAAL,CAAWkB,OAAX,CAAmBF,KAAnB,EAAP;AACA;AACD;AACA,OAAMG,OAAO,MAAKC,OAAL,EAAb;AACA,OAAID,IAAJ,EAAU;AACTA,SAAKH,KAAL;AACA,IAFD,MAEO;AACNK,YAAQR,KAAR,gCAA0C,MAAKJ,OAAL,EAA1C,+BAAkFa,wBAAlF;AACA;AACD,GArMkB;;AAAA,QAuMnBC,MAvMmB,GAuMV,UAACC,OAAD,EAAa;AACrB;AACA;AACA,OAAI,CAAC,MAAKP,OAAV,EAAmB;AAClB;AACA;AACD,OAAME,OAAO,MAAKC,OAAL,EAAb;AACA,OAAID,IAAJ,EAAU;AACT,2BAASA,IAAT,EAAeK,OAAf;AACA,IAFD,MAEO;AACNH,YAAQR,KAAR,iCAA2C,MAAKJ,OAAL,EAA3C,+BAAmFa,wBAAnF;AACA;AACD,GAnNkB;;AAAA,QAqNnBR,QArNmB,GAqNR,UAACV,KAAD,EAAW;AAAA,sBACmB,MAAKR,KADxB;AAAA,OACbC,OADa,gBACbA,OADa;AAAA,OACJiB,QADI,gBACJA,QADI;AAAA,OACMW,QADN,gBACMA,QADN;;AAErBrB,WAAQP,QAAQ6B,iBAAR,CAA0BtB,KAA1B,CAAR;AACA,OAAIqB,YAAYE,aAAavB,KAAb,CAAhB,EAAqC;AACpC,WAAO,OAAOqB,QAAP,KAAoB,QAApB,GAA+BA,QAA/B,GAA0C5B,QAAQ+B,kBAAR,EAAjD;AACA;AACD,OAAId,QAAJ,EAAc;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAOA,SAASV,KAAT,EAAgBP,QAAQgC,SAAR,EAAhB,CAAP;AACA;AACD,GAvOkB;;AAIlB,QAAKC,QAAL;AAJkB;AAKlB;;;;4BAE2B;AAAA,OAApBlC,KAAoB,uEAAZ,KAAKA,KAAO;AAAA,OACnBE,WADmB,GACMF,KADN,CACnBE,WADmB;AAAA,OACNiC,CADM,GACMnC,KADN,CACNmC,CADM;AAAA,OACHC,IADG,GACMpC,KADN,CACHoC,IADG;;AAE3B,OAAIlC,WAAJ,EAAiB;AAChB,WAAOA,YAAYmC,YAAZ,CAAyBF,CAAzB,EAA4BC,IAA5B,CAAP;AACA;AACD,UAAOA,IAAP;AACA;;;6BAEU;AAAA,gBAQN,KAAKpC,KARC;AAAA,OAETC,OAFS,UAETA,OAFS;AAAA,OAGTC,WAHS,UAGTA,WAHS;AAAA,OAITe,KAJS,UAITA,KAJS;AAAA,OAKTmB,IALS,UAKTA,IALS;AAAA,OAMT5B,KANS,UAMTA,KANS;AAAA,OAOTH,QAPS,UAOTA,QAPS;;AAUV;AACA;AACA;AACA;AACA;AACA;;AACAJ,WAAQqC,eAAR,CAAwB,KAAKzB,OAAL,EAAxB,EAAwC;AACvCL,gBADuC;AAEvCH,sBAFuC;AAGvCY,gBAHuC;AAIvCC,cAAU,KAAKA,QAJwB;AAKvCS,YAAQ,KAAKA,MAL0B;AAMvCP,WAAO,KAAKA;AAN2B,IAAxC;;AASA,OAAIlB,WAAJ,EAAiB;AAChBA,gBAAYoC,eAAZ,CAA4BF,IAA5B;AACA;AACD;;;6BAEUG,S,EAAW;AAAA,OACbtC,OADa,GACD,KAAKD,KADJ,CACbC,OADa;;AAErBA,WAAQuC,iBAAR,CAA0B,KAAK3B,OAAL,CAAa0B,SAAb,CAA1B;AACA;;;sCAEmB;AACnB,QAAKlB,OAAL,GAAe,IAAf;AACA;;;yCAEsB;AACtB;AACA,QAAKoB,UAAL;AACA,QAAKpB,OAAL,GAAe,KAAf;AACA;;;qCAEkBkB,S,EAAW;AAAA,iBACK,KAAKvC,KADV;AAAA,OACrBC,OADqB,WACrBA,OADqB;AAAA,OACZO,KADY,WACZA,KADY;AAAA,OACLS,KADK,WACLA,KADK;;AAG7B;AACA;;AACA,OAAI,KAAKJ,OAAL,OAAmB,KAAKA,OAAL,CAAa0B,SAAb,CAAvB,EAAgD;AAC/C;AACA,SAAKE,UAAL,CAAgBF,SAAhB;AACA;AACA,SAAKL,QAAL;AACA;AACD;AANA,QAOK;AACJ;AACA;AACA;AACA;AACA,SAAI1B,UAAU+B,UAAU/B,KAApB,IAA6B,CAAC,KAAKG,aAAvC,EAAsD;AACrDV,cAAQW,QAAR,CAAiB,4BAAc,KAAKC,OAAL,EAAd,EAA8BL,KAA9B,CAAjB;AACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAI+B,UAAUtB,KAAV,KAAoBA,KAAxB,EAA+B;AAC9B,WAAKyB,4BAAL,CAAkCzB,KAAlC;AACA;AACD;AACD;;;+CAE4BA,K,EAAO;AAAA,OAC3BhB,OAD2B,GACf,KAAKD,KADU,CAC3BC,OAD2B;;;AAGnC,OAAMO,QAAQP,QAAQkB,MAAR,CAAe,KAAKN,OAAL,EAAf,CAAd;AACA,OAAM8B,YAAY1C,QAAQ2C,UAAR,CAAmB,KAAK/B,OAAL,EAAnB,CAAlB;;AAEA;AACA,OAAII,KAAJ,EAAW;AACVhB,YAAQW,QAAR,CAAiB,4BAAc,KAAKC,OAAL,EAAd,EAA8BI,KAA9B,CAAjB;AACA;AACA;AACA,SAAKU,MAAL;AACA,SAAKP,KAAL;AACA;AACD;AACA;AACA;AATA,QAUK,IAAI,CAACH,KAAD,IAAU,CAAC,KAAKC,QAAL,CAAcV,KAAd,CAAf,EAAqC;AACzCP,aAAQW,QAAR,CAAiB,4BAAc,KAAKC,OAAL,EAAd,EAA8BC,SAA9B,CAAjB;AACA;AACD;;;4BA2CS;AACT,OAAI,KAAKV,KAAL,CAAWkB,OAAf,EAAwB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAI;AACH,YAAOuB,mBAASC,WAAT,CAAqB,KAAK1C,KAAL,CAAWkB,OAAhC,CAAP;AACA,KAFD,CAEE,OAAOL,KAAP,EAAc;AACf;AACA;AACA,SAAI,KAAKb,KAAL,CAAWkB,OAAX,CAAmByB,UAAvB,EAAmC;AAClC,aAAO,KAAK3C,KAAL,CAAWkB,OAAX,CAAmByB,UAAnB,EAAP;AACA;AACDtB,aAAQuB,IAAR,CAAa/B,KAAb;AACA;AACD;AACD;;AAED;;;;2BAwDS;AAAA,iBAMJ,KAAKjB,KAND;AAAA,OAEPC,OAFO,WAEPA,OAFO;AAAA,OAGP4B,QAHO,WAGPA,QAHO;AAAA,OAIPoB,QAJO,WAIPA,QAJO;AAAA,OAKPC,SALO,WAKPA,SALO;;;AAQR,OAAM1C,QAAQP,QAAQkB,MAAR,CAAe,KAAKN,OAAL,EAAf,CAAd;AACA,OAAMI,QAAQhB,QAAQkD,gBAAR,CAAyB,KAAKtC,OAAL,EAAzB,KAA4CZ,QAAQmD,MAAR,CAAe,KAAKvC,OAAL,EAAf,CAA1D;AACA,OAAM8B,YAAY1C,QAAQ2C,UAAR,CAAmB,KAAK/B,OAAL,EAAnB,CAAlB;;AAEA,UAAOwC,gBAAMC,aAAN,CAAoBJ,SAApB,eACH,kCAAoB,KAAKlD,KAAzB,EAAgCG,UAAUoD,SAA1C,CADG;AAENC,SAAW,KAAKpD,KAFV;AAGNC,cAAW,KAAKA,QAHV;AAINU,aAAW,KAAKA,OAJV;AAKNC,YAAW,KAAKA,MALV;AAMNiC,cAAWA,YAAYhD,QAAQwD,UANzB;AAONxC,WAAW0B,YAAY1B,KAAZ,GAAoBH,SAPzB;AAQNe,cAAWA,WAAW,IAAX,GAAkB,KARvB;AASNrB;AATM,MAAP;AAWA;;;;EAjRsBkD,gB,UAChBH,S,GAAY;AAClBnB,OAAYuB,oBAAUC,MAAV,CAAiBC,UADX;AAElBX,YAAYS,oBAAUG,WAAV,CAAsBD,UAFhB;AAGlBhC,WAAY8B,oBAAUI,SAAV,CAAoB,CAAEJ,oBAAUK,IAAZ,EAAkBL,oBAAUC,MAA5B,CAApB,CAHM;;AAKlBpD,QAAWmD,oBAAUM,GALH;AAMlBhD,QAAW0C,oBAAUC,MANH;AAOlB1C,WAAWyC,oBAAUO,IAPH;;AASlBjE,UAASkE,sBAAgBN,UATP;AAUlB3D,cAAakE,yBAVK;AAWlBjC,IAAGwB,oBAAUU;AAXK,C;;;AAmRpB,SAAStC,YAAT,CAAsBuC,CAAtB,EACA;AACC,QAAOA,MAAMxD,SAAN,IAAmBwD,MAAM,IAAzB,IACLC,MAAMC,OAAN,CAAcF,CAAd,KAAoBA,EAAEG,MAAF,KAAa,CADnC;AAEA;;AAED,IAAM/C,2BAA2B,kHAAjC","file":"field.js","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport PropTypes from 'prop-types'\r\nimport createRef from 'react-create-ref'\r\n\r\nimport { Context, contextPropType } from './form'\r\nimport { ListContext, listContextPropType } from './list'\r\nimport { getPassThroughProps, scrollTo } from './utility'\r\n\r\nimport {\r\n\tsetFieldValue,\r\n\tsetFieldError,\r\n\tsetFieldValidationError,\r\n\t// showFieldError,\r\n\tfieldFocused\r\n} from './actions'\r\n\r\nexport default function Field(props) {\r\n\treturn (\r\n\t\t<Context.Consumer>\r\n\t\t\t{context => (\r\n\t\t\t\t<ListContext.Consumer>\r\n\t\t\t\t\t{listContext => (\r\n\t\t\t\t\t\t<FormField\r\n\t\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t\t\tcontext={context}\r\n\t\t\t\t\t\t\tlistContext={listContext}/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</ListContext.Consumer>\r\n\t\t\t)}\r\n\t\t</Context.Consumer>\r\n\t)\r\n}\r\n\r\nclass FormField extends Component {\r\n\tstatic propTypes = {\r\n\t\tname      : PropTypes.string.isRequired,\r\n\t\tcomponent : PropTypes.elementType.isRequired,\r\n\t\trequired  : PropTypes.oneOfType([ PropTypes.bool, PropTypes.string ]),\r\n\r\n\t\tvalue    : PropTypes.any,\r\n\t\terror    : PropTypes.string,\r\n\t\tvalidate : PropTypes.func,\r\n\r\n\t\tcontext: contextPropType.isRequired,\r\n\t\tlistContext: listContextPropType,\r\n\t\ti: PropTypes.number\r\n\t}\r\n\r\n\tfield = createRef()\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\t// The field could register itself inside `componentDidMount`\r\n\t\t// but in that case initial `value` wouldn't yet be applied at mount time.\r\n\t\tthis.register()\r\n\t}\r\n\r\n\tgetName(props = this.props) {\r\n\t\tconst { listContext, i, name } = props\r\n\t\tif (listContext) {\r\n\t\t\treturn listContext.getFieldName(i, name)\r\n\t\t}\r\n\t\treturn name\r\n\t}\r\n\r\n\tregister() {\r\n\t\tconst {\r\n\t\t\tcontext,\r\n\t\t\tlistContext,\r\n\t\t\terror,\r\n\t\t\tname,\r\n\t\t\tvalue,\r\n\t\t\tonChange\r\n\t\t} = this.props\r\n\r\n\t\t// \"Register\" the field and initialize it with the default value.\r\n\t\t//\r\n\t\t// React will reuse and reshuffle existing `<Fields/>`\r\n\t\t// when hiding/showing new fields, so a field might get\r\n\t\t// \"registered\"/\"unregistered\" several times in those cases.\r\n\t\t//\r\n\t\tcontext.onRegisterField(this.getName(), {\r\n\t\t\tvalue,\r\n\t\t\tonChange,\r\n\t\t\terror,\r\n\t\t\tvalidate: this.validate,\r\n\t\t\tscroll: this.scroll,\r\n\t\t\tfocus: this.focus\r\n\t\t})\r\n\r\n\t\tif (listContext) {\r\n\t\t\tlistContext.onRegisterField(name)\r\n\t\t}\r\n\t}\r\n\r\n\tunregister(prevProps) {\r\n\t\tconst { context } = this.props\r\n\t\tcontext.onUnregisterField(this.getName(prevProps))\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.mounted = true\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\t// \"Unregister\" field.\r\n\t\tthis.unregister()\r\n\t\tthis.mounted = false\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tconst { context, value, error } = this.props\r\n\r\n\t\t// If React reused one `<Field/>` element for another form field\r\n\t\t// then handle this type of situation correctly.\r\n\t\tif (this.getName() !== this.getName(prevProps)) {\r\n\t\t\t// Unregister old field.\r\n\t\t\tthis.unregister(prevProps)\r\n\t\t\t// Register new field.\r\n\t\t\tthis.register()\r\n\t\t}\r\n\t\t// Else, if it's still the same field.\r\n\t\telse {\r\n\t\t\t// If the default value changed for this `<Field/>`\r\n\t\t\t// and the field hasn't been edited yet\r\n\t\t\t// then apply this new default value.\r\n\t\t\t// A default value isn't supposed to generate an error.\r\n\t\t\tif (value !== prevProps.value && !this.hasBeenEdited) {\r\n\t\t\t\tcontext.dispatch(setFieldValue(this.getName(), value))\r\n\t\t\t}\r\n\t\t\t// If an externally set `error` property is updated,\r\n\t\t\t// then update invalid indication for this field accordingly.\r\n\t\t\t// If the same error happened once again,\r\n\t\t\t// then it should have been reset\r\n\t\t\t// before sending form data to the server,\r\n\t\t\t// and in that case it will be shown once again.\r\n\t\t\tif (prevProps.error !== error) {\r\n\t\t\t\tthis.showOrHideExternallySetError(error)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tshowOrHideExternallySetError(error) {\r\n\t\tconst { context } = this.props\r\n\r\n\t\tconst value = context.values[this.getName()]\r\n\t\tconst showError = context.showErrors[this.getName()]\r\n\r\n\t\t// If the `error` is set then indicate this field as being invalid.\r\n\t\tif (error) {\r\n\t\t\tcontext.dispatch(setFieldError(this.getName(), error))\r\n\t\t\t// `setFieldError()` action also automatically sets `showErrors[field]` property.\r\n\t\t\t// context.dispatch(showFieldError(this.getName()))\r\n\t\t\tthis.scroll()\r\n\t\t\tthis.focus()\r\n\t\t}\r\n\t\t// If the `error` is reset and the field is valid\r\n\t\t// then reset invalid indication.\r\n\t\t// `!this.validate(value)` means \"the value is valid\".\r\n\t\telse if (!error && !this.validate(value)) {\r\n\t\t\tcontext.dispatch(setFieldError(this.getName(), undefined))\r\n\t\t}\r\n\t}\r\n\r\n\tonChange = (...args) => {\r\n\t\tconst [event] = args\r\n\t\tlet value = event\r\n\t\tif (event && typeof event.preventDefault === 'function') {\r\n\t\t\tvalue = event.target.value\r\n\t\t}\r\n\r\n\t\t// Once a user enters/erases a value in this field\r\n\t\t// the default `value` property no longer applies.\r\n\t\t// This flag won't work with `form.reset()`.\r\n\t\tthis.hasBeenEdited = true\r\n\r\n\t\tconst { context, onChange } = this.props\r\n\r\n\t\tcontext.dispatch(setFieldValue(this.getName(), value))\r\n\t\tcontext.dispatch(setFieldValidationError(this.getName(), undefined))\r\n\r\n\t\tif (onChange) {\r\n\t\t\tonChange(...args)\r\n\t\t}\r\n\t}\r\n\r\n\tonFocus = (event) => {\r\n\t\tconst { context, onFocus } = this.props\r\n\t\tcontext.dispatch(fieldFocused(this.getName()))\r\n\t\tif (onFocus) {\r\n\t\t\tonFocus(event)\r\n\t\t}\r\n\t}\r\n\r\n\tonBlur = (event) => {\r\n\t\tconst { context, onBlur } = this.props\r\n\t\tconst error = this.validate(context.values[this.getName()])\r\n\t\tif (error) {\r\n\t\t\tcontext.dispatch(setFieldValidationError(this.getName(), error))\r\n\t\t}\r\n\t\tif (onBlur) {\r\n\t\t\tonBlur(event)\r\n\t\t}\r\n\t}\r\n\r\n\tgetNode() {\r\n\t\tif (this.field.current) {\r\n\t\t\t// Using `ReactDOM.findDOMNode` instead of `this.field.current`\r\n\t\t\t// to supports non-functional components that don't use `React.forwardRef()`.\r\n\t\t\t// For example, `<DropFileUpload/>` from `react-responsive-ui`.\r\n\t\t\t//\r\n\t\t\t// Using `useImperativeHandle()` would throw an error here:\r\n\t\t\t// \"Argument appears to not be a ReactComponent. Keys: focus\".\r\n\t\t\t//\r\n\t\t\ttry {\r\n\t\t\t\treturn ReactDOM.findDOMNode(this.field.current)\r\n\t\t\t} catch (error) {\r\n\t\t\t\t// A workaround for components that use `useImperativeHandle()`\r\n\t\t\t\t// for adding `ref` suport.\r\n\t\t\t\tif (this.field.current.getDOMNode) {\r\n\t\t\t\t\treturn this.field.current.getDOMNode()\r\n\t\t\t\t}\r\n\t\t\t\tconsole.warn(error)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Focuses on a field (can be called externally through a ref).\r\n\tfocus = () => {\r\n\t\t// `.focus()` could theoretically maybe potentially be called in a timeout,\r\n\t\t// so check if the component is still mounted.\r\n\t\tif (!this.mounted) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (!this.field.current) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (typeof this.field.current.focus === 'function') {\r\n\t\t\treturn this.field.current.focus()\r\n\t\t}\r\n\t\t// Generic DOM focusing.\r\n\t\tconst node = this.getNode()\r\n\t\tif (node) {\r\n\t\t\tnode.focus()\r\n\t\t} else {\r\n\t\t\tconsole.error(`Couldn't focus on field \"${this.getName()}\": DOM Node not found. ${STATELESS_COMPONENT_HINT}`)\r\n\t\t}\r\n\t}\r\n\r\n\tscroll = (options) => {\r\n\t\t// `.scroll()` could theoretically maybe potentially be called in a timeout,\r\n\t\t// so check if the component is still mounted.\r\n\t\tif (!this.mounted) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst node = this.getNode()\r\n\t\tif (node) {\r\n\t\t\tscrollTo(node, options)\r\n\t\t} else {\r\n\t\t\tconsole.error(`Couldn't scroll to field \"${this.getName()}\": DOM Node not found. ${STATELESS_COMPONENT_HINT}`)\r\n\t\t}\r\n\t}\r\n\r\n\tvalidate = (value) => {\r\n\t\tconst { context, validate, required } = this.props\r\n\t\tvalue = context.getSubmittedValue(value)\r\n\t\tif (required && isValueEmpty(value)) {\r\n\t\t\treturn typeof required === 'string' ? required : context.getRequiredMessage()\r\n\t\t}\r\n\t\tif (validate) {\r\n\t\t\t// `context.values` could be replaced with\r\n\t\t\t// something else, like `context.getValues()`\r\n\t\t\t// because `<List/>` values are prefixed in `context.values`.\r\n\t\t\t// But running RegExps and re-creating the object\r\n\t\t\t// on each `validate()` call seems like a not-the-best architecture.\r\n\t\t\t// Instead `values` could be replaced with something like\r\n\t\t\t// `context.getValues()` but that would be a \"breaking change\" in the API.\r\n\t\t\t// On a modern CPU a single `context.getValues()` run is about 0.005 ms.\r\n\t\t\t// So I guess it's acceptable, since the API already exists.\r\n\t\t\treturn validate(value, context.getValues())\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tcontext,\r\n\t\t\trequired,\r\n\t\t\tdisabled,\r\n\t\t\tcomponent\r\n\t\t} = this.props\r\n\r\n\t\tconst value = context.values[this.getName()]\r\n\t\tconst error = context.validationErrors[this.getName()] || context.errors[this.getName()]\r\n\t\tconst showError = context.showErrors[this.getName()]\r\n\r\n\t\treturn React.createElement(component, {\r\n\t\t\t...getPassThroughProps(this.props, FormField.propTypes),\r\n\t\t\tref      : this.field,\r\n\t\t\tonChange : this.onChange,\r\n\t\t\tonFocus  : this.onFocus,\r\n\t\t\tonBlur   : this.onBlur,\r\n\t\t\tdisabled : disabled || context.submitting,\r\n\t\t\terror    : showError ? error : undefined,\r\n\t\t\trequired : required ? true : false,\r\n\t\t\tvalue\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction isValueEmpty(_)\r\n{\r\n\treturn _ === undefined || _ === null ||\r\n\t\t(Array.isArray(_) && _.length === 0)\r\n}\r\n\r\nconst STATELESS_COMPONENT_HINT = 'For example, if it\\'s a \"stateless\" component then rewrite it as a \"React.Component\" having a \".focus()\" method.'"]}