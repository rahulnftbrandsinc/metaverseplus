{
  "{\"sourceRoot\":\"/Volumes/evo970/metaverseplus/scripts\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Volumes/evo970/metaverseplus\",\"filename\":\"/Volumes/evo970/metaverseplus/scripts/login.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/evo970/metaverseplus\",\"plugins\":[],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Volumes/evo970/metaverseplus/scripts",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Volumes/evo970/metaverseplus",
      "filename": "/Volumes/evo970/metaverseplus/scripts/login.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Volumes/evo970/metaverseplus",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/evo970/metaverseplus/scripts/login.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Volumes/evo970/metaverseplus/scripts/login.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/evo970/metaverseplus/scripts",
        "sourceFileName": "login.js"
      }
    },
    "ast": null,
    "code": "import readline from \"readline\";\nimport { connectToReticulum } from \"../src/utils/phoenix-utils\";\nimport Store from \"../src/storage/store\";\nimport AuthChannel from \"../src/utils/auth-channel\";\nimport configs from \"../src/utils/configs.js\";\nimport { Socket } from \"phoenix-channels\";\nimport { writeFileSync } from \"fs\";\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nconst ask = q => new Promise(res => rl.question(q, res));\n\n(async () => {\n  console.log(\"Logging into Hubs Cloud.\\n\");\n  const host = await ask(\"Host (eg hubs.mozilla.com): \");\n\n  if (!host) {\n    console.log(\"Invalid host.\");\n    process.exit(1);\n  }\n\n  const url = `https://${host}/api/v1/meta`;\n\n  try {\n    const res = await fetch(url);\n    const meta = await res.json();\n\n    if (!meta.phx_host) {\n      throw new Error();\n    }\n  } catch (e) {\n    console.log(\"Sorry, that doesn't look like a Hubs Cloud server.\");\n    process.exit(0);\n  }\n\n  configs.RETICULUM_SERVER = host;\n  configs.RETICULUM_SOCKET_PROTOCOL = \"wss:\";\n  const socket = await connectToReticulum(false, null, Socket);\n  const store = new Store();\n  const email = await ask(\"Your admin account email (eg admin@yoursite.com): \");\n  console.log(`Logging into ${host} as ${email}. Click on the link in your email to continue.`);\n  const authChannel = new AuthChannel(store);\n  authChannel.setSocket(socket);\n  const {\n    authComplete\n  } = await authChannel.startAuthentication(email);\n  await authComplete;\n  const {\n    token\n  } = store.state.credentials;\n  const creds = {\n    host,\n    email,\n    token\n  };\n  writeFileSync(\".ret.credentials\", JSON.stringify(creds));\n  rl.close();\n  console.log(\"Login successful.\\nCredentials written to .ret.credentials. Run npm run logout to remove credentials.\");\n  process.exit(0);\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmpzIl0sIm5hbWVzIjpbInJlYWRsaW5lIiwiY29ubmVjdFRvUmV0aWN1bHVtIiwiU3RvcmUiLCJBdXRoQ2hhbm5lbCIsImNvbmZpZ3MiLCJTb2NrZXQiLCJ3cml0ZUZpbGVTeW5jIiwicmwiLCJjcmVhdGVJbnRlcmZhY2UiLCJpbnB1dCIsInByb2Nlc3MiLCJzdGRpbiIsIm91dHB1dCIsInN0ZG91dCIsImFzayIsInEiLCJQcm9taXNlIiwicmVzIiwicXVlc3Rpb24iLCJjb25zb2xlIiwibG9nIiwiaG9zdCIsImV4aXQiLCJ1cmwiLCJmZXRjaCIsIm1ldGEiLCJqc29uIiwicGh4X2hvc3QiLCJFcnJvciIsImUiLCJSRVRJQ1VMVU1fU0VSVkVSIiwiUkVUSUNVTFVNX1NPQ0tFVF9QUk9UT0NPTCIsInNvY2tldCIsInN0b3JlIiwiZW1haWwiLCJhdXRoQ2hhbm5lbCIsInNldFNvY2tldCIsImF1dGhDb21wbGV0ZSIsInN0YXJ0QXV0aGVudGljYXRpb24iLCJ0b2tlbiIsInN0YXRlIiwiY3JlZGVudGlhbHMiLCJjcmVkcyIsIkpTT04iLCJzdHJpbmdpZnkiLCJjbG9zZSJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsUUFBUCxNQUFxQixVQUFyQjtBQUNBLFNBQVNDLGtCQUFULFFBQW1DLDRCQUFuQztBQUNBLE9BQU9DLEtBQVAsTUFBa0Isc0JBQWxCO0FBQ0EsT0FBT0MsV0FBUCxNQUF3QiwyQkFBeEI7QUFDQSxPQUFPQyxPQUFQLE1BQW9CLHlCQUFwQjtBQUNBLFNBQVNDLE1BQVQsUUFBdUIsa0JBQXZCO0FBQ0EsU0FBU0MsYUFBVCxRQUE4QixJQUE5QjtBQUVBLE1BQU1DLEVBQUUsR0FBR1AsUUFBUSxDQUFDUSxlQUFULENBQXlCO0FBQUVDLEVBQUFBLEtBQUssRUFBRUMsT0FBTyxDQUFDQyxLQUFqQjtBQUF3QkMsRUFBQUEsTUFBTSxFQUFFRixPQUFPLENBQUNHO0FBQXhDLENBQXpCLENBQVg7O0FBRUEsTUFBTUMsR0FBRyxHQUFHQyxDQUFDLElBQUksSUFBSUMsT0FBSixDQUFZQyxHQUFHLElBQUlWLEVBQUUsQ0FBQ1csUUFBSCxDQUFZSCxDQUFaLEVBQWVFLEdBQWYsQ0FBbkIsQ0FBakI7O0FBRUEsQ0FBQyxZQUFZO0FBQ1hFLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDRCQUFaO0FBQ0EsUUFBTUMsSUFBSSxHQUFHLE1BQU1QLEdBQUcsQ0FBQyw4QkFBRCxDQUF0Qjs7QUFDQSxNQUFJLENBQUNPLElBQUwsRUFBVztBQUNURixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxlQUFaO0FBQ0FWLElBQUFBLE9BQU8sQ0FBQ1ksSUFBUixDQUFhLENBQWI7QUFDRDs7QUFFRCxRQUFNQyxHQUFHLEdBQUksV0FBVUYsSUFBSyxjQUE1Qjs7QUFDQSxNQUFJO0FBQ0YsVUFBTUosR0FBRyxHQUFHLE1BQU1PLEtBQUssQ0FBQ0QsR0FBRCxDQUF2QjtBQUNBLFVBQU1FLElBQUksR0FBRyxNQUFNUixHQUFHLENBQUNTLElBQUosRUFBbkI7O0FBRUEsUUFBSSxDQUFDRCxJQUFJLENBQUNFLFFBQVYsRUFBb0I7QUFDbEIsWUFBTSxJQUFJQyxLQUFKLEVBQU47QUFDRDtBQUNGLEdBUEQsQ0FPRSxPQUFPQyxDQUFQLEVBQVU7QUFDVlYsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksb0RBQVo7QUFDQVYsSUFBQUEsT0FBTyxDQUFDWSxJQUFSLENBQWEsQ0FBYjtBQUNEOztBQUVEbEIsRUFBQUEsT0FBTyxDQUFDMEIsZ0JBQVIsR0FBMkJULElBQTNCO0FBQ0FqQixFQUFBQSxPQUFPLENBQUMyQix5QkFBUixHQUFvQyxNQUFwQztBQUVBLFFBQU1DLE1BQU0sR0FBRyxNQUFNL0Isa0JBQWtCLENBQUMsS0FBRCxFQUFRLElBQVIsRUFBY0ksTUFBZCxDQUF2QztBQUNBLFFBQU00QixLQUFLLEdBQUcsSUFBSS9CLEtBQUosRUFBZDtBQUVBLFFBQU1nQyxLQUFLLEdBQUcsTUFBTXBCLEdBQUcsQ0FBQyxvREFBRCxDQUF2QjtBQUNBSyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBYSxnQkFBZUMsSUFBSyxPQUFNYSxLQUFNLGdEQUE3QztBQUNBLFFBQU1DLFdBQVcsR0FBRyxJQUFJaEMsV0FBSixDQUFnQjhCLEtBQWhCLENBQXBCO0FBQ0FFLEVBQUFBLFdBQVcsQ0FBQ0MsU0FBWixDQUFzQkosTUFBdEI7QUFDQSxRQUFNO0FBQUVLLElBQUFBO0FBQUYsTUFBbUIsTUFBTUYsV0FBVyxDQUFDRyxtQkFBWixDQUFnQ0osS0FBaEMsQ0FBL0I7QUFDQSxRQUFNRyxZQUFOO0FBQ0EsUUFBTTtBQUFFRSxJQUFBQTtBQUFGLE1BQVlOLEtBQUssQ0FBQ08sS0FBTixDQUFZQyxXQUE5QjtBQUNBLFFBQU1DLEtBQUssR0FBRztBQUNackIsSUFBQUEsSUFEWTtBQUVaYSxJQUFBQSxLQUZZO0FBR1pLLElBQUFBO0FBSFksR0FBZDtBQU1BakMsRUFBQUEsYUFBYSxDQUFDLGtCQUFELEVBQXFCcUMsSUFBSSxDQUFDQyxTQUFMLENBQWVGLEtBQWYsQ0FBckIsQ0FBYjtBQUNBbkMsRUFBQUEsRUFBRSxDQUFDc0MsS0FBSDtBQUNBMUIsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksdUdBQVo7QUFDQVYsRUFBQUEsT0FBTyxDQUFDWSxJQUFSLENBQWEsQ0FBYjtBQUNELENBNUNEIiwic291cmNlUm9vdCI6Ii9Wb2x1bWVzL2V2bzk3MC9tZXRhdmVyc2VwbHVzL3NjcmlwdHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcmVhZGxpbmUgZnJvbSBcInJlYWRsaW5lXCI7XG5pbXBvcnQgeyBjb25uZWN0VG9SZXRpY3VsdW0gfSBmcm9tIFwiLi4vc3JjL3V0aWxzL3Bob2VuaXgtdXRpbHNcIjtcbmltcG9ydCBTdG9yZSBmcm9tIFwiLi4vc3JjL3N0b3JhZ2Uvc3RvcmVcIjtcbmltcG9ydCBBdXRoQ2hhbm5lbCBmcm9tIFwiLi4vc3JjL3V0aWxzL2F1dGgtY2hhbm5lbFwiO1xuaW1wb3J0IGNvbmZpZ3MgZnJvbSBcIi4uL3NyYy91dGlscy9jb25maWdzLmpzXCI7XG5pbXBvcnQgeyBTb2NrZXQgfSBmcm9tIFwicGhvZW5peC1jaGFubmVsc1wiO1xuaW1wb3J0IHsgd3JpdGVGaWxlU3luYyB9IGZyb20gXCJmc1wiO1xuXG5jb25zdCBybCA9IHJlYWRsaW5lLmNyZWF0ZUludGVyZmFjZSh7IGlucHV0OiBwcm9jZXNzLnN0ZGluLCBvdXRwdXQ6IHByb2Nlc3Muc3Rkb3V0IH0pO1xuXG5jb25zdCBhc2sgPSBxID0+IG5ldyBQcm9taXNlKHJlcyA9PiBybC5xdWVzdGlvbihxLCByZXMpKTtcblxuKGFzeW5jICgpID0+IHtcbiAgY29uc29sZS5sb2coXCJMb2dnaW5nIGludG8gSHVicyBDbG91ZC5cXG5cIik7XG4gIGNvbnN0IGhvc3QgPSBhd2FpdCBhc2soXCJIb3N0IChlZyBodWJzLm1vemlsbGEuY29tKTogXCIpO1xuICBpZiAoIWhvc3QpIHtcbiAgICBjb25zb2xlLmxvZyhcIkludmFsaWQgaG9zdC5cIik7XG4gICAgcHJvY2Vzcy5leGl0KDEpO1xuICB9XG5cbiAgY29uc3QgdXJsID0gYGh0dHBzOi8vJHtob3N0fS9hcGkvdjEvbWV0YWA7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2godXJsKTtcbiAgICBjb25zdCBtZXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuICAgIGlmICghbWV0YS5waHhfaG9zdCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCk7XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS5sb2coXCJTb3JyeSwgdGhhdCBkb2Vzbid0IGxvb2sgbGlrZSBhIEh1YnMgQ2xvdWQgc2VydmVyLlwiKTtcbiAgICBwcm9jZXNzLmV4aXQoMCk7XG4gIH1cblxuICBjb25maWdzLlJFVElDVUxVTV9TRVJWRVIgPSBob3N0O1xuICBjb25maWdzLlJFVElDVUxVTV9TT0NLRVRfUFJPVE9DT0wgPSBcIndzczpcIjtcblxuICBjb25zdCBzb2NrZXQgPSBhd2FpdCBjb25uZWN0VG9SZXRpY3VsdW0oZmFsc2UsIG51bGwsIFNvY2tldCk7XG4gIGNvbnN0IHN0b3JlID0gbmV3IFN0b3JlKCk7XG5cbiAgY29uc3QgZW1haWwgPSBhd2FpdCBhc2soXCJZb3VyIGFkbWluIGFjY291bnQgZW1haWwgKGVnIGFkbWluQHlvdXJzaXRlLmNvbSk6IFwiKTtcbiAgY29uc29sZS5sb2coYExvZ2dpbmcgaW50byAke2hvc3R9IGFzICR7ZW1haWx9LiBDbGljayBvbiB0aGUgbGluayBpbiB5b3VyIGVtYWlsIHRvIGNvbnRpbnVlLmApO1xuICBjb25zdCBhdXRoQ2hhbm5lbCA9IG5ldyBBdXRoQ2hhbm5lbChzdG9yZSk7XG4gIGF1dGhDaGFubmVsLnNldFNvY2tldChzb2NrZXQpO1xuICBjb25zdCB7IGF1dGhDb21wbGV0ZSB9ID0gYXdhaXQgYXV0aENoYW5uZWwuc3RhcnRBdXRoZW50aWNhdGlvbihlbWFpbCk7XG4gIGF3YWl0IGF1dGhDb21wbGV0ZTtcbiAgY29uc3QgeyB0b2tlbiB9ID0gc3RvcmUuc3RhdGUuY3JlZGVudGlhbHM7XG4gIGNvbnN0IGNyZWRzID0ge1xuICAgIGhvc3QsXG4gICAgZW1haWwsXG4gICAgdG9rZW5cbiAgfTtcblxuICB3cml0ZUZpbGVTeW5jKFwiLnJldC5jcmVkZW50aWFsc1wiLCBKU09OLnN0cmluZ2lmeShjcmVkcykpO1xuICBybC5jbG9zZSgpO1xuICBjb25zb2xlLmxvZyhcIkxvZ2luIHN1Y2Nlc3NmdWwuXFxuQ3JlZGVudGlhbHMgd3JpdHRlbiB0byAucmV0LmNyZWRlbnRpYWxzLiBSdW4gbnBtIHJ1biBsb2dvdXQgdG8gcmVtb3ZlIGNyZWRlbnRpYWxzLlwiKTtcbiAgcHJvY2Vzcy5leGl0KDApO1xufSkoKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "login.js"
      ],
      "names": [
        "readline",
        "connectToReticulum",
        "Store",
        "AuthChannel",
        "configs",
        "Socket",
        "writeFileSync",
        "rl",
        "createInterface",
        "input",
        "process",
        "stdin",
        "output",
        "stdout",
        "ask",
        "q",
        "Promise",
        "res",
        "question",
        "console",
        "log",
        "host",
        "exit",
        "url",
        "fetch",
        "meta",
        "json",
        "phx_host",
        "Error",
        "e",
        "RETICULUM_SERVER",
        "RETICULUM_SOCKET_PROTOCOL",
        "socket",
        "store",
        "email",
        "authChannel",
        "setSocket",
        "authComplete",
        "startAuthentication",
        "token",
        "state",
        "credentials",
        "creds",
        "JSON",
        "stringify",
        "close"
      ],
      "mappings": "AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,aAAT,QAA8B,IAA9B;AAEA,MAAMC,EAAE,GAAGP,QAAQ,CAACQ,eAAT,CAAyB;AAAEC,EAAAA,KAAK,EAAEC,OAAO,CAACC,KAAjB;AAAwBC,EAAAA,MAAM,EAAEF,OAAO,CAACG;AAAxC,CAAzB,CAAX;;AAEA,MAAMC,GAAG,GAAGC,CAAC,IAAI,IAAIC,OAAJ,CAAYC,GAAG,IAAIV,EAAE,CAACW,QAAH,CAAYH,CAAZ,EAAeE,GAAf,CAAnB,CAAjB;;AAEA,CAAC,YAAY;AACXE,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,QAAMC,IAAI,GAAG,MAAMP,GAAG,CAAC,8BAAD,CAAtB;;AACA,MAAI,CAACO,IAAL,EAAW;AACTF,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAV,IAAAA,OAAO,CAACY,IAAR,CAAa,CAAb;AACD;;AAED,QAAMC,GAAG,GAAI,WAAUF,IAAK,cAA5B;;AACA,MAAI;AACF,UAAMJ,GAAG,GAAG,MAAMO,KAAK,CAACD,GAAD,CAAvB;AACA,UAAME,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAJ,EAAnB;;AAEA,QAAI,CAACD,IAAI,CAACE,QAAV,EAAoB;AAClB,YAAM,IAAIC,KAAJ,EAAN;AACD;AACF,GAPD,CAOE,OAAOC,CAAP,EAAU;AACVV,IAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ;AACAV,IAAAA,OAAO,CAACY,IAAR,CAAa,CAAb;AACD;;AAEDlB,EAAAA,OAAO,CAAC0B,gBAAR,GAA2BT,IAA3B;AACAjB,EAAAA,OAAO,CAAC2B,yBAAR,GAAoC,MAApC;AAEA,QAAMC,MAAM,GAAG,MAAM/B,kBAAkB,CAAC,KAAD,EAAQ,IAAR,EAAcI,MAAd,CAAvC;AACA,QAAM4B,KAAK,GAAG,IAAI/B,KAAJ,EAAd;AAEA,QAAMgC,KAAK,GAAG,MAAMpB,GAAG,CAAC,oDAAD,CAAvB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeC,IAAK,OAAMa,KAAM,gDAA7C;AACA,QAAMC,WAAW,GAAG,IAAIhC,WAAJ,CAAgB8B,KAAhB,CAApB;AACAE,EAAAA,WAAW,CAACC,SAAZ,CAAsBJ,MAAtB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAmB,MAAMF,WAAW,CAACG,mBAAZ,CAAgCJ,KAAhC,CAA/B;AACA,QAAMG,YAAN;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAYN,KAAK,CAACO,KAAN,CAAYC,WAA9B;AACA,QAAMC,KAAK,GAAG;AACZrB,IAAAA,IADY;AAEZa,IAAAA,KAFY;AAGZK,IAAAA;AAHY,GAAd;AAMAjC,EAAAA,aAAa,CAAC,kBAAD,EAAqBqC,IAAI,CAACC,SAAL,CAAeF,KAAf,CAArB,CAAb;AACAnC,EAAAA,EAAE,CAACsC,KAAH;AACA1B,EAAAA,OAAO,CAACC,GAAR,CAAY,uGAAZ;AACAV,EAAAA,OAAO,CAACY,IAAR,CAAa,CAAb;AACD,CA5CD",
      "sourceRoot": "/Volumes/evo970/metaverseplus/scripts",
      "sourcesContent": [
        "import readline from \"readline\";\nimport { connectToReticulum } from \"../src/utils/phoenix-utils\";\nimport Store from \"../src/storage/store\";\nimport AuthChannel from \"../src/utils/auth-channel\";\nimport configs from \"../src/utils/configs.js\";\nimport { Socket } from \"phoenix-channels\";\nimport { writeFileSync } from \"fs\";\n\nconst rl = readline.createInterface({ input: process.stdin, output: process.stdout });\n\nconst ask = q => new Promise(res => rl.question(q, res));\n\n(async () => {\n  console.log(\"Logging into Hubs Cloud.\\n\");\n  const host = await ask(\"Host (eg hubs.mozilla.com): \");\n  if (!host) {\n    console.log(\"Invalid host.\");\n    process.exit(1);\n  }\n\n  const url = `https://${host}/api/v1/meta`;\n  try {\n    const res = await fetch(url);\n    const meta = await res.json();\n\n    if (!meta.phx_host) {\n      throw new Error();\n    }\n  } catch (e) {\n    console.log(\"Sorry, that doesn't look like a Hubs Cloud server.\");\n    process.exit(0);\n  }\n\n  configs.RETICULUM_SERVER = host;\n  configs.RETICULUM_SOCKET_PROTOCOL = \"wss:\";\n\n  const socket = await connectToReticulum(false, null, Socket);\n  const store = new Store();\n\n  const email = await ask(\"Your admin account email (eg admin@yoursite.com): \");\n  console.log(`Logging into ${host} as ${email}. Click on the link in your email to continue.`);\n  const authChannel = new AuthChannel(store);\n  authChannel.setSocket(socket);\n  const { authComplete } = await authChannel.startAuthentication(email);\n  await authComplete;\n  const { token } = store.state.credentials;\n  const creds = {\n    host,\n    email,\n    token\n  };\n\n  writeFileSync(\".ret.credentials\", JSON.stringify(creds));\n  rl.close();\n  console.log(\"Login successful.\\nCredentials written to .ret.credentials. Run npm run logout to remove credentials.\");\n  process.exit(0);\n})();\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1655189688000
  },
  "{\"sourceRoot\":\"/Volumes/evo970/metaverseplus/src/utils\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Volumes/evo970/metaverseplus\",\"filename\":\"/Volumes/evo970/metaverseplus/src/utils/phoenix-utils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/evo970/metaverseplus\",\"plugins\":[],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Volumes/evo970/metaverseplus/src/utils",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Volumes/evo970/metaverseplus",
      "filename": "/Volumes/evo970/metaverseplus/src/utils/phoenix-utils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Volumes/evo970/metaverseplus",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/evo970/metaverseplus/src/utils/phoenix-utils.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Volumes/evo970/metaverseplus/src/utils/phoenix-utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/evo970/metaverseplus/src/utils",
        "sourceFileName": "phoenix-utils.js"
      }
    },
    "ast": null,
    "code": "import { Socket } from \"phoenix\";\nimport { generateHubName } from \"../utils/name-generation\";\nimport configs from \"../utils/configs\";\nimport { sleep } from \"../utils/async-utils\";\nimport Store from \"../storage/store\";\nexport function hasReticulumServer() {\n  return !!configs.RETICULUM_SERVER;\n}\nexport function isLocalClient() {\n  return hasReticulumServer() && document.location.host !== configs.RETICULUM_SERVER;\n}\nexport function hubUrl(hubId, extraParams, slug) {\n  if (!hubId) {\n    if (isLocalClient()) {\n      hubId = new URLSearchParams(location.search).get(\"hub_id\");\n    } else {\n      hubId = location.pathname.split(\"/\")[1];\n    }\n  }\n\n  let url;\n\n  if (isLocalClient()) {\n    url = new URL(`/hub.html`, location.href);\n    url.searchParams.set(\"hub_id\", hubId);\n  } else {\n    const maybeSlug = slug ? `/${slug}` : \"\";\n    url = new URL(`/${hubId}${maybeSlug}`, location.href);\n  }\n\n  for (const key in extraParams) {\n    if (extraParams.hasOwnProperty(key)) {\n      url.searchParams.set(key, extraParams[key]);\n    }\n  }\n\n  return url;\n}\nconst resolverLink = document.createElement(\"a\");\nlet reticulumMeta = null;\nlet invalidatedReticulumMetaThisSession = false;\nexport function getReticulumFetchUrl(path, absolute = false, host = null, port = null) {\n  if (host || hasReticulumServer()) {\n    return `https://${host || configs.RETICULUM_SERVER}${port ? `:${port}` : \"\"}${path}`;\n  } else if (absolute) {\n    resolverLink.href = path;\n    return resolverLink.href;\n  } else {\n    return path;\n  }\n}\nexport function getUploadsUrl(path, absolute = false, host = null, port = null) {\n  // If the Hubs Cloud stack is configured to use Cloudflare, we need to ignore the configured UPLOADS_HOST\n  // since reticulum will only serve uploads via the Cloudflare worker. BASE_ASSETS_PATH will have been\n  // correctly configured to use the Cloudflare worker, though we only need the hostname,\n  // not the full assets URL.\n  const isUsingCloudflare = configs.BASE_ASSETS_PATH.includes(\"workers.dev\");\n  const uploadsHost = isUsingCloudflare ? new URL(configs.BASE_ASSETS_PATH).hostname : configs.UPLOADS_HOST;\n  return uploadsHost ? `https://${uploadsHost}${port ? `:${port}` : \"\"}${path}` : getReticulumFetchUrl(path, absolute, host, port);\n}\nexport async function getReticulumMeta() {\n  if (!reticulumMeta) {\n    // Initially look up version based upon page, avoiding round-trip, otherwise fetch.\n    if (!invalidatedReticulumMetaThisSession && document.querySelector(\"meta[name='ret:version']\")) {\n      reticulumMeta = {\n        version: document.querySelector(\"meta[name='ret:version']\").getAttribute(\"value\"),\n        pool: document.querySelector(\"meta[name='ret:pool']\").getAttribute(\"value\"),\n        phx_host: document.querySelector(\"meta[name='ret:phx_host']\").getAttribute(\"value\")\n      };\n    } else {\n      await fetch(getReticulumFetchUrl(\"/api/v1/meta\")).then(async res => {\n        reticulumMeta = await res.json();\n      });\n    }\n  }\n\n  const qs = new URLSearchParams(location.search);\n  const phxHostOverride = qs.get(\"phx_host\");\n\n  if (phxHostOverride) {\n    reticulumMeta.phx_host = phxHostOverride;\n  }\n\n  return reticulumMeta;\n}\nlet directReticulumHostAndPort;\n\nasync function refreshDirectReticulumHostAndPort() {\n  const qs = new URLSearchParams(location.search);\n  let host = qs.get(\"phx_host\");\n  const reticulumMeta = await getReticulumMeta();\n  host = host || configs.RETICULUM_SOCKET_SERVER || reticulumMeta.phx_host;\n  const port = qs.get(\"phx_port\") || (hasReticulumServer() ? new URL(`${document.location.protocol}//${configs.RETICULUM_SERVER}`).port : \"443\");\n  directReticulumHostAndPort = {\n    host,\n    port\n  };\n}\n\nexport function getDirectReticulumFetchUrl(path, absolute = false) {\n  if (!directReticulumHostAndPort) {\n    console.warn(\"Cannot call getDirectReticulumFetchUrl before connectToReticulum. Returning non-direct url.\");\n    return getReticulumFetchUrl(path, absolute);\n  }\n\n  const {\n    host,\n    port\n  } = directReticulumHostAndPort;\n  return getReticulumFetchUrl(path, absolute, host, port);\n}\nexport async function invalidateReticulumMeta() {\n  invalidatedReticulumMetaThisSession = true;\n  reticulumMeta = null;\n}\nexport async function connectToReticulum(debug = false, params = null, socketClass = Socket) {\n  const qs = new URLSearchParams(location.search);\n\n  const getNewSocketUrl = async () => {\n    await refreshDirectReticulumHostAndPort();\n    const {\n      host,\n      port\n    } = directReticulumHostAndPort;\n    const protocol = qs.get(\"phx_protocol\") || configs.RETICULUM_SOCKET_PROTOCOL || (document.location.protocol === \"https:\" ? \"wss:\" : \"ws:\");\n    return `${protocol}//${host}${port ? `:${port}` : \"\"}`;\n  };\n\n  const socketUrl = await getNewSocketUrl();\n  console.log(`Phoenix Socket URL: ${socketUrl}`);\n  const socketSettings = {};\n\n  if (debug) {\n    socketSettings.logger = (kind, msg, data) => {\n      console.log(`${kind}: ${msg}`, data);\n    };\n  }\n\n  if (params) {\n    socketSettings.params = params;\n  }\n\n  const socket = new socketClass(`${socketUrl}/socket`, socketSettings);\n  socket.connect();\n  socket.onError(async () => {\n    // On error, underlying reticulum node may have died, so rebalance by\n    // fetching a new healthy node to connect to.\n    invalidateReticulumMeta();\n    const endPointPath = new URL(socket.endPoint).pathname;\n    const newSocketUrl = await getNewSocketUrl();\n    const newEndPoint = `${newSocketUrl}${endPointPath}`;\n    console.log(`Socket error, changed endpoint to ${newEndPoint}`);\n    socket.endPoint = newEndPoint;\n  });\n  return socket;\n}\nexport function getLandingPageForPhoto(photoUrl) {\n  const parsedUrl = new URL(photoUrl);\n  return getReticulumFetchUrl(parsedUrl.pathname.replace(\".png\", \".html\") + parsedUrl.search, true);\n}\nexport function fetchReticulumAuthenticated(url, method = \"GET\", payload) {\n  const {\n    token\n  } = window.APP.store.state.credentials;\n  const retUrl = getReticulumFetchUrl(url);\n  const params = {\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    method\n  };\n\n  if (token) {\n    params.headers.authorization = `bearer ${token}`;\n  }\n\n  if (payload) {\n    params.body = JSON.stringify(payload);\n  }\n\n  return fetch(retUrl, params).then(async r => {\n    const result = await r.text();\n\n    try {\n      return JSON.parse(result);\n    } catch (e) {\n      // Some reticulum responses, particularly DELETE requests, don't return json.\n      return result;\n    }\n  });\n}\nexport async function createAndRedirectToNewHub(name, sceneId, replace) {\n  const createUrl = getReticulumFetchUrl(\"/api/v1/hubs\");\n  const payload = {\n    hub: {\n      name: name || generateHubName()\n    }\n  };\n\n  if (sceneId) {\n    payload.hub.scene_id = sceneId;\n  }\n\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  const store = new Store();\n\n  if (store.state && store.state.credentials.token) {\n    headers.authorization = `bearer ${store.state.credentials.token}`;\n  }\n\n  let res = await fetch(createUrl, {\n    body: JSON.stringify(payload),\n    headers,\n    method: \"POST\"\n  }).then(r => r.json());\n\n  if (res.error === \"invalid_token\") {\n    // Clear the invalid token from store.\n    store.update({\n      credentials: {\n        token: null,\n        email: null\n      }\n    }); // Create hub anonymously\n\n    delete headers.authorization;\n    res = await fetch(createUrl, {\n      body: JSON.stringify(payload),\n      headers,\n      method: \"POST\"\n    }).then(r => r.json());\n  }\n\n  const hub = res;\n  let url = hub.url;\n  const creatorAssignmentToken = hub.creator_assignment_token;\n\n  if (creatorAssignmentToken) {\n    store.update({\n      creatorAssignmentTokens: [{\n        hubId: hub.hub_id,\n        creatorAssignmentToken: creatorAssignmentToken\n      }]\n    }); // Don't need to store the embed token if there's no creator assignment token, since that means\n    // we are the owner and will get the embed token on page load.\n\n    const embedToken = hub.embed_token;\n\n    if (embedToken) {\n      store.update({\n        embedTokens: [{\n          hubId: hub.hub_id,\n          embedToken: embedToken\n        }]\n      });\n    }\n  }\n\n  if (isLocalClient()) {\n    url = `/hub.html?hub_id=${hub.hub_id}`;\n  }\n\n  if (replace) {\n    document.location.replace(url);\n  } else {\n    document.location = url;\n  }\n}\nexport function getPresenceEntryForSession(presences, sessionId) {\n  const entry = Object.entries(presences || {}).find(([k]) => k === sessionId) || [];\n  const presence = entry[1];\n  return presence && presence.metas && presence.metas[0] || {};\n}\nexport function getPresenceContextForSession(presences, sessionId) {\n  return (getPresenceEntryForSession(presences, sessionId) || {}).context || {};\n}\nexport function getPresenceProfileForSession(presences, sessionId) {\n  return (getPresenceEntryForSession(presences, sessionId) || {}).profile || {};\n}\n\nfunction migrateBindings(oldChannel, newChannel) {\n  const doNotDuplicate = [\"phx_close\", \"phx_error\", \"phx_reply\", \"presence_state\", \"presence_diff\"];\n\n  const shouldDuplicate = event => {\n    return !event.startsWith(\"chan_reply_\") && !doNotDuplicate.includes(event);\n  };\n\n  for (let i = 0, l = oldChannel.bindings.length; i < l; i++) {\n    const item = oldChannel.bindings[i];\n\n    if (shouldDuplicate(item.event)) {\n      newChannel.bindings.push(item);\n    }\n  }\n\n  newChannel.bindingRef = oldChannel.bindingRef;\n} // Takes the given channel, and creates a new channel with the same bindings\n// with the given socket, joins it, and leaves the old channel after joining.\n//\n// NOTE: This function relies upon phoenix channel object internals, so this\n// function will need to be reviewed if/when we ever update phoenix.js\n\n\nexport function migrateChannelToSocket(oldChannel, socket, params) {\n  const channel = socket.channel(oldChannel.topic, params || oldChannel.params);\n  migrateBindings(oldChannel, channel);\n\n  for (let i = 0, l = oldChannel.pushBuffer.length; i < l; i++) {\n    const item = oldChannel.pushBuffer[i];\n    channel.push(item.event, item.payload, item.timeout);\n  }\n\n  const oldJoinPush = oldChannel.joinPush;\n  const joinPush = channel.join();\n\n  for (let i = 0, l = oldJoinPush.recHooks.length; i < l; i++) {\n    const item = oldJoinPush.recHooks[i];\n    joinPush.receive(item.status, item.callback);\n  }\n\n  return new Promise(resolve => {\n    joinPush.receive(\"ok\", () => {\n      // Clear all event handlers first so no duplicate messages come in.\n      oldChannel.bindings = [];\n      resolve(channel);\n    });\n  });\n}\nexport function migrateToChannel(oldChannel, newChannel) {\n  migrateBindings(oldChannel, newChannel);\n  return new Promise((resolve, reject) => {\n    newChannel.join().receive(\"ok\", data => {\n      oldChannel.leave();\n      oldChannel.bindings = [];\n      resolve(data);\n    }).receive(\"error\", data => {\n      newChannel.leave();\n      reject(data);\n    });\n  });\n}\nexport function discordBridgesForPresences(presences) {\n  const channels = [];\n\n  for (const p of Object.values(presences)) {\n    for (const m of p.metas) {\n      if (m.profile && m.profile.discordBridges) {\n        Array.prototype.push.apply(channels, m.profile.discordBridges.map(b => b.channel.name));\n      }\n    }\n  }\n\n  return channels;\n}\nexport function hasEmbedPresences(presences) {\n  for (const p of Object.values(presences)) {\n    for (const m of p.metas) {\n      if (m.context && m.context.embed) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\nexport function denoisePresence({\n  onJoin,\n  onLeave,\n  onChange\n}) {\n  return {\n    rawOnJoin: (key, beforeJoin, afterJoin) => {\n      if (beforeJoin === undefined) {\n        onJoin(key, afterJoin.metas[0]);\n      }\n    },\n    rawOnLeave: (key, remaining, removed) => {\n      if (remaining.metas.length === 0) {\n        onLeave(key, removed.metas[0]);\n      } else {\n        onChange(key, removed.metas[removed.metas.length - 1], remaining.metas[remaining.metas.length - 1]);\n      }\n    }\n  };\n}\nexport function presenceEventsForHub(events) {\n  const onJoin = (key, meta) => {\n    events.trigger(`hub:join`, {\n      key,\n      meta\n    });\n  };\n\n  const onLeave = (key, meta) => {\n    events.trigger(`hub:leave`, {\n      key,\n      meta\n    });\n  };\n\n  const onChange = (key, previous, current) => {\n    events.trigger(`hub:change`, {\n      key,\n      previous,\n      current\n    });\n  };\n\n  return {\n    onJoin,\n    onLeave,\n    onChange\n  };\n}\nexport const tryGetMatchingMeta = async ({\n  ret_pool,\n  ret_version\n}, shouldAbandonMigration) => {\n  const backoffMS = 5000;\n  const randomMS = 15000;\n  const maxAttempts = 10;\n  let didMatchMeta = false;\n  let attempt = 0;\n\n  while (!didMatchMeta && attempt < maxAttempts && !shouldAbandonMigration()) {\n    try {\n      // Add randomness to the first request avoid flooding reticulum.\n      const delayMS = attempt * backoffMS + (attempt === 0 ? Math.random() * randomMS : 0);\n      console.log(`[reconnect] Getting reticulum meta in ${Math.ceil(delayMS / 1000)} seconds.${attempt ? ` (Attempt ${attempt + 1} of ${maxAttempts})` : \"\"}`);\n      await sleep(delayMS);\n      invalidateReticulumMeta();\n      console.log(`[reconnect] Getting reticulum meta.${attempt ? ` (Attempt ${attempt + 1} of ${maxAttempts})` : \"\"}`);\n      const {\n        pool,\n        version\n      } = await getReticulumMeta();\n      didMatchMeta = ret_pool === pool && ret_version === version;\n    } catch {\n      didMatchMeta = false;\n    }\n\n    attempt = attempt + 1;\n  }\n\n  return didMatchMeta;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "phoenix-utils.js"
      ],
      "names": [
        "Socket",
        "generateHubName",
        "configs",
        "sleep",
        "Store",
        "hasReticulumServer",
        "RETICULUM_SERVER",
        "isLocalClient",
        "document",
        "location",
        "host",
        "hubUrl",
        "hubId",
        "extraParams",
        "slug",
        "URLSearchParams",
        "search",
        "get",
        "pathname",
        "split",
        "url",
        "URL",
        "href",
        "searchParams",
        "set",
        "maybeSlug",
        "key",
        "hasOwnProperty",
        "resolverLink",
        "createElement",
        "reticulumMeta",
        "invalidatedReticulumMetaThisSession",
        "getReticulumFetchUrl",
        "path",
        "absolute",
        "port",
        "getUploadsUrl",
        "isUsingCloudflare",
        "BASE_ASSETS_PATH",
        "includes",
        "uploadsHost",
        "hostname",
        "UPLOADS_HOST",
        "getReticulumMeta",
        "querySelector",
        "version",
        "getAttribute",
        "pool",
        "phx_host",
        "fetch",
        "then",
        "res",
        "json",
        "qs",
        "phxHostOverride",
        "directReticulumHostAndPort",
        "refreshDirectReticulumHostAndPort",
        "RETICULUM_SOCKET_SERVER",
        "protocol",
        "getDirectReticulumFetchUrl",
        "console",
        "warn",
        "invalidateReticulumMeta",
        "connectToReticulum",
        "debug",
        "params",
        "socketClass",
        "getNewSocketUrl",
        "RETICULUM_SOCKET_PROTOCOL",
        "socketUrl",
        "log",
        "socketSettings",
        "logger",
        "kind",
        "msg",
        "data",
        "socket",
        "connect",
        "onError",
        "endPointPath",
        "endPoint",
        "newSocketUrl",
        "newEndPoint",
        "getLandingPageForPhoto",
        "photoUrl",
        "parsedUrl",
        "replace",
        "fetchReticulumAuthenticated",
        "method",
        "payload",
        "token",
        "window",
        "APP",
        "store",
        "state",
        "credentials",
        "retUrl",
        "headers",
        "authorization",
        "body",
        "JSON",
        "stringify",
        "r",
        "result",
        "text",
        "parse",
        "e",
        "createAndRedirectToNewHub",
        "name",
        "sceneId",
        "createUrl",
        "hub",
        "scene_id",
        "error",
        "update",
        "email",
        "creatorAssignmentToken",
        "creator_assignment_token",
        "creatorAssignmentTokens",
        "hub_id",
        "embedToken",
        "embed_token",
        "embedTokens",
        "getPresenceEntryForSession",
        "presences",
        "sessionId",
        "entry",
        "Object",
        "entries",
        "find",
        "k",
        "presence",
        "metas",
        "getPresenceContextForSession",
        "context",
        "getPresenceProfileForSession",
        "profile",
        "migrateBindings",
        "oldChannel",
        "newChannel",
        "doNotDuplicate",
        "shouldDuplicate",
        "event",
        "startsWith",
        "i",
        "l",
        "bindings",
        "length",
        "item",
        "push",
        "bindingRef",
        "migrateChannelToSocket",
        "channel",
        "topic",
        "pushBuffer",
        "timeout",
        "oldJoinPush",
        "joinPush",
        "join",
        "recHooks",
        "receive",
        "status",
        "callback",
        "Promise",
        "resolve",
        "migrateToChannel",
        "reject",
        "leave",
        "discordBridgesForPresences",
        "channels",
        "p",
        "values",
        "m",
        "discordBridges",
        "Array",
        "prototype",
        "apply",
        "map",
        "b",
        "hasEmbedPresences",
        "embed",
        "denoisePresence",
        "onJoin",
        "onLeave",
        "onChange",
        "rawOnJoin",
        "beforeJoin",
        "afterJoin",
        "undefined",
        "rawOnLeave",
        "remaining",
        "removed",
        "presenceEventsForHub",
        "events",
        "meta",
        "trigger",
        "previous",
        "current",
        "tryGetMatchingMeta",
        "ret_pool",
        "ret_version",
        "shouldAbandonMigration",
        "backoffMS",
        "randomMS",
        "maxAttempts",
        "didMatchMeta",
        "attempt",
        "delayMS",
        "Math",
        "random",
        "ceil"
      ],
      "mappings": "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",
      "sourceRoot": "/Volumes/evo970/metaverseplus/src/utils",
      "sourcesContent": [
        "import { Socket } from \"phoenix\";\nimport { generateHubName } from \"../utils/name-generation\";\nimport configs from \"../utils/configs\";\nimport { sleep } from \"../utils/async-utils\";\n\nimport Store from \"../storage/store\";\n\nexport function hasReticulumServer() {\n  return !!configs.RETICULUM_SERVER;\n}\n\nexport function isLocalClient() {\n  return hasReticulumServer() && document.location.host !== configs.RETICULUM_SERVER;\n}\n\nexport function hubUrl(hubId, extraParams, slug) {\n  if (!hubId) {\n    if (isLocalClient()) {\n      hubId = new URLSearchParams(location.search).get(\"hub_id\");\n    } else {\n      hubId = location.pathname.split(\"/\")[1];\n    }\n  }\n\n  let url;\n  if (isLocalClient()) {\n    url = new URL(`/hub.html`, location.href);\n    url.searchParams.set(\"hub_id\", hubId);\n  } else {\n    const maybeSlug = slug ? `/${slug}` : \"\";\n    url = new URL(`/${hubId}${maybeSlug}`, location.href);\n  }\n\n  for (const key in extraParams) {\n    if (extraParams.hasOwnProperty(key)) {\n      url.searchParams.set(key, extraParams[key]);\n    }\n  }\n\n  return url;\n}\n\nconst resolverLink = document.createElement(\"a\");\nlet reticulumMeta = null;\nlet invalidatedReticulumMetaThisSession = false;\n\nexport function getReticulumFetchUrl(path, absolute = false, host = null, port = null) {\n  if (host || hasReticulumServer()) {\n    return `https://${host || configs.RETICULUM_SERVER}${port ? `:${port}` : \"\"}${path}`;\n  } else if (absolute) {\n    resolverLink.href = path;\n    return resolverLink.href;\n  } else {\n    return path;\n  }\n}\n\nexport function getUploadsUrl(path, absolute = false, host = null, port = null) {\n  // If the Hubs Cloud stack is configured to use Cloudflare, we need to ignore the configured UPLOADS_HOST\n  // since reticulum will only serve uploads via the Cloudflare worker. BASE_ASSETS_PATH will have been\n  // correctly configured to use the Cloudflare worker, though we only need the hostname,\n  // not the full assets URL.\n  const isUsingCloudflare = configs.BASE_ASSETS_PATH.includes(\"workers.dev\");\n  const uploadsHost = isUsingCloudflare ? new URL(configs.BASE_ASSETS_PATH).hostname : configs.UPLOADS_HOST;\n  return uploadsHost\n    ? `https://${uploadsHost}${port ? `:${port}` : \"\"}${path}`\n    : getReticulumFetchUrl(path, absolute, host, port);\n}\n\nexport async function getReticulumMeta() {\n  if (!reticulumMeta) {\n    // Initially look up version based upon page, avoiding round-trip, otherwise fetch.\n    if (!invalidatedReticulumMetaThisSession && document.querySelector(\"meta[name='ret:version']\")) {\n      reticulumMeta = {\n        version: document.querySelector(\"meta[name='ret:version']\").getAttribute(\"value\"),\n        pool: document.querySelector(\"meta[name='ret:pool']\").getAttribute(\"value\"),\n        phx_host: document.querySelector(\"meta[name='ret:phx_host']\").getAttribute(\"value\")\n      };\n    } else {\n      await fetch(getReticulumFetchUrl(\"/api/v1/meta\")).then(async res => {\n        reticulumMeta = await res.json();\n      });\n    }\n  }\n\n  const qs = new URLSearchParams(location.search);\n  const phxHostOverride = qs.get(\"phx_host\");\n\n  if (phxHostOverride) {\n    reticulumMeta.phx_host = phxHostOverride;\n  }\n\n  return reticulumMeta;\n}\n\nlet directReticulumHostAndPort;\n\nasync function refreshDirectReticulumHostAndPort() {\n  const qs = new URLSearchParams(location.search);\n  let host = qs.get(\"phx_host\");\n  const reticulumMeta = await getReticulumMeta();\n  host = host || configs.RETICULUM_SOCKET_SERVER || reticulumMeta.phx_host;\n  const port =\n    qs.get(\"phx_port\") ||\n    (hasReticulumServer() ? new URL(`${document.location.protocol}//${configs.RETICULUM_SERVER}`).port : \"443\");\n  directReticulumHostAndPort = { host, port };\n}\n\nexport function getDirectReticulumFetchUrl(path, absolute = false) {\n  if (!directReticulumHostAndPort) {\n    console.warn(\"Cannot call getDirectReticulumFetchUrl before connectToReticulum. Returning non-direct url.\");\n    return getReticulumFetchUrl(path, absolute);\n  }\n\n  const { host, port } = directReticulumHostAndPort;\n  return getReticulumFetchUrl(path, absolute, host, port);\n}\n\nexport async function invalidateReticulumMeta() {\n  invalidatedReticulumMetaThisSession = true;\n  reticulumMeta = null;\n}\n\nexport async function connectToReticulum(debug = false, params = null, socketClass = Socket) {\n  const qs = new URLSearchParams(location.search);\n\n  const getNewSocketUrl = async () => {\n    await refreshDirectReticulumHostAndPort();\n    const { host, port } = directReticulumHostAndPort;\n    const protocol =\n      qs.get(\"phx_protocol\") ||\n      configs.RETICULUM_SOCKET_PROTOCOL ||\n      (document.location.protocol === \"https:\" ? \"wss:\" : \"ws:\");\n\n    return `${protocol}//${host}${port ? `:${port}` : \"\"}`;\n  };\n\n  const socketUrl = await getNewSocketUrl();\n  console.log(`Phoenix Socket URL: ${socketUrl}`);\n\n  const socketSettings = {};\n\n  if (debug) {\n    socketSettings.logger = (kind, msg, data) => {\n      console.log(`${kind}: ${msg}`, data);\n    };\n  }\n\n  if (params) {\n    socketSettings.params = params;\n  }\n\n  const socket = new socketClass(`${socketUrl}/socket`, socketSettings);\n  socket.connect();\n  socket.onError(async () => {\n    // On error, underlying reticulum node may have died, so rebalance by\n    // fetching a new healthy node to connect to.\n    invalidateReticulumMeta();\n\n    const endPointPath = new URL(socket.endPoint).pathname;\n    const newSocketUrl = await getNewSocketUrl();\n    const newEndPoint = `${newSocketUrl}${endPointPath}`;\n    console.log(`Socket error, changed endpoint to ${newEndPoint}`);\n    socket.endPoint = newEndPoint;\n  });\n\n  return socket;\n}\n\nexport function getLandingPageForPhoto(photoUrl) {\n  const parsedUrl = new URL(photoUrl);\n  return getReticulumFetchUrl(parsedUrl.pathname.replace(\".png\", \".html\") + parsedUrl.search, true);\n}\n\nexport function fetchReticulumAuthenticated(url, method = \"GET\", payload) {\n  const { token } = window.APP.store.state.credentials;\n  const retUrl = getReticulumFetchUrl(url);\n  const params = {\n    headers: { \"content-type\": \"application/json\" },\n    method\n  };\n  if (token) {\n    params.headers.authorization = `bearer ${token}`;\n  }\n  if (payload) {\n    params.body = JSON.stringify(payload);\n  }\n  return fetch(retUrl, params).then(async r => {\n    const result = await r.text();\n    try {\n      return JSON.parse(result);\n    } catch (e) {\n      // Some reticulum responses, particularly DELETE requests, don't return json.\n      return result;\n    }\n  });\n}\n\nexport async function createAndRedirectToNewHub(name, sceneId, replace) {\n  const createUrl = getReticulumFetchUrl(\"/api/v1/hubs\");\n  const payload = { hub: { name: name || generateHubName() } };\n\n  if (sceneId) {\n    payload.hub.scene_id = sceneId;\n  }\n\n  const headers = { \"content-type\": \"application/json\" };\n  const store = new Store();\n  if (store.state && store.state.credentials.token) {\n    headers.authorization = `bearer ${store.state.credentials.token}`;\n  }\n\n  let res = await fetch(createUrl, {\n    body: JSON.stringify(payload),\n    headers,\n    method: \"POST\"\n  }).then(r => r.json());\n\n  if (res.error === \"invalid_token\") {\n    // Clear the invalid token from store.\n    store.update({ credentials: { token: null, email: null } });\n\n    // Create hub anonymously\n    delete headers.authorization;\n    res = await fetch(createUrl, {\n      body: JSON.stringify(payload),\n      headers,\n      method: \"POST\"\n    }).then(r => r.json());\n  }\n\n  const hub = res;\n  let url = hub.url;\n\n  const creatorAssignmentToken = hub.creator_assignment_token;\n  if (creatorAssignmentToken) {\n    store.update({ creatorAssignmentTokens: [{ hubId: hub.hub_id, creatorAssignmentToken: creatorAssignmentToken }] });\n\n    // Don't need to store the embed token if there's no creator assignment token, since that means\n    // we are the owner and will get the embed token on page load.\n    const embedToken = hub.embed_token;\n\n    if (embedToken) {\n      store.update({ embedTokens: [{ hubId: hub.hub_id, embedToken: embedToken }] });\n    }\n  }\n\n  if (isLocalClient()) {\n    url = `/hub.html?hub_id=${hub.hub_id}`;\n  }\n\n  if (replace) {\n    document.location.replace(url);\n  } else {\n    document.location = url;\n  }\n}\n\nexport function getPresenceEntryForSession(presences, sessionId) {\n  const entry = Object.entries(presences || {}).find(([k]) => k === sessionId) || [];\n  const presence = entry[1];\n  return (presence && presence.metas && presence.metas[0]) || {};\n}\n\nexport function getPresenceContextForSession(presences, sessionId) {\n  return (getPresenceEntryForSession(presences, sessionId) || {}).context || {};\n}\n\nexport function getPresenceProfileForSession(presences, sessionId) {\n  return (getPresenceEntryForSession(presences, sessionId) || {}).profile || {};\n}\n\nfunction migrateBindings(oldChannel, newChannel) {\n  const doNotDuplicate = [\"phx_close\", \"phx_error\", \"phx_reply\", \"presence_state\", \"presence_diff\"];\n  const shouldDuplicate = event => {\n    return !event.startsWith(\"chan_reply_\") && !doNotDuplicate.includes(event);\n  };\n  for (let i = 0, l = oldChannel.bindings.length; i < l; i++) {\n    const item = oldChannel.bindings[i];\n    if (shouldDuplicate(item.event)) {\n      newChannel.bindings.push(item);\n    }\n  }\n  newChannel.bindingRef = oldChannel.bindingRef;\n}\n\n// Takes the given channel, and creates a new channel with the same bindings\n// with the given socket, joins it, and leaves the old channel after joining.\n//\n// NOTE: This function relies upon phoenix channel object internals, so this\n// function will need to be reviewed if/when we ever update phoenix.js\nexport function migrateChannelToSocket(oldChannel, socket, params) {\n  const channel = socket.channel(oldChannel.topic, params || oldChannel.params);\n\n  migrateBindings(oldChannel, channel);\n\n  for (let i = 0, l = oldChannel.pushBuffer.length; i < l; i++) {\n    const item = oldChannel.pushBuffer[i];\n    channel.push(item.event, item.payload, item.timeout);\n  }\n\n  const oldJoinPush = oldChannel.joinPush;\n  const joinPush = channel.join();\n\n  for (let i = 0, l = oldJoinPush.recHooks.length; i < l; i++) {\n    const item = oldJoinPush.recHooks[i];\n    joinPush.receive(item.status, item.callback);\n  }\n\n  return new Promise(resolve => {\n    joinPush.receive(\"ok\", () => {\n      // Clear all event handlers first so no duplicate messages come in.\n      oldChannel.bindings = [];\n      resolve(channel);\n    });\n  });\n}\n\nexport function migrateToChannel(oldChannel, newChannel) {\n  migrateBindings(oldChannel, newChannel);\n\n  return new Promise((resolve, reject) => {\n    newChannel\n      .join()\n      .receive(\"ok\", data => {\n        oldChannel.leave();\n        oldChannel.bindings = [];\n        resolve(data);\n      })\n      .receive(\"error\", data => {\n        newChannel.leave();\n        reject(data);\n      });\n  });\n}\n\nexport function discordBridgesForPresences(presences) {\n  const channels = [];\n  for (const p of Object.values(presences)) {\n    for (const m of p.metas) {\n      if (m.profile && m.profile.discordBridges) {\n        Array.prototype.push.apply(channels, m.profile.discordBridges.map(b => b.channel.name));\n      }\n    }\n  }\n  return channels;\n}\n\nexport function hasEmbedPresences(presences) {\n  for (const p of Object.values(presences)) {\n    for (const m of p.metas) {\n      if (m.context && m.context.embed) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nexport function denoisePresence({ onJoin, onLeave, onChange }) {\n  return {\n    rawOnJoin: (key, beforeJoin, afterJoin) => {\n      if (beforeJoin === undefined) {\n        onJoin(key, afterJoin.metas[0]);\n      }\n    },\n    rawOnLeave: (key, remaining, removed) => {\n      if (remaining.metas.length === 0) {\n        onLeave(key, removed.metas[0]);\n      } else {\n        onChange(key, removed.metas[removed.metas.length - 1], remaining.metas[remaining.metas.length - 1]);\n      }\n    }\n  };\n}\n\nexport function presenceEventsForHub(events) {\n  const onJoin = (key, meta) => {\n    events.trigger(`hub:join`, { key, meta });\n  };\n  const onLeave = (key, meta) => {\n    events.trigger(`hub:leave`, { key, meta });\n  };\n  const onChange = (key, previous, current) => {\n    events.trigger(`hub:change`, { key, previous, current });\n  };\n  return {\n    onJoin,\n    onLeave,\n    onChange\n  };\n}\n\nexport const tryGetMatchingMeta = async ({ ret_pool, ret_version }, shouldAbandonMigration) => {\n  const backoffMS = 5000;\n  const randomMS = 15000;\n  const maxAttempts = 10;\n  let didMatchMeta = false;\n  let attempt = 0;\n  while (!didMatchMeta && attempt < maxAttempts && !shouldAbandonMigration()) {\n    try {\n      // Add randomness to the first request avoid flooding reticulum.\n      const delayMS = attempt * backoffMS + (attempt === 0 ? Math.random() * randomMS : 0);\n      console.log(\n        `[reconnect] Getting reticulum meta in ${Math.ceil(delayMS / 1000)} seconds.${\n          attempt ? ` (Attempt ${attempt + 1} of ${maxAttempts})` : \"\"\n        }`\n      );\n      await sleep(delayMS);\n      invalidateReticulumMeta();\n      console.log(`[reconnect] Getting reticulum meta.${attempt ? ` (Attempt ${attempt + 1} of ${maxAttempts})` : \"\"}`);\n      const { pool, version } = await getReticulumMeta();\n      didMatchMeta = ret_pool === pool && ret_version === version;\n    } catch {\n      didMatchMeta = false;\n    }\n\n    attempt = attempt + 1;\n  }\n  return didMatchMeta;\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1655189689000
  },
  "{\"sourceRoot\":\"/Volumes/evo970/metaverseplus/src/utils\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Volumes/evo970/metaverseplus\",\"filename\":\"/Volumes/evo970/metaverseplus/src/utils/name-generation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/evo970/metaverseplus\",\"plugins\":[],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Volumes/evo970/metaverseplus/src/utils",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Volumes/evo970/metaverseplus",
      "filename": "/Volumes/evo970/metaverseplus/src/utils/name-generation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Volumes/evo970/metaverseplus",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/evo970/metaverseplus/src/utils/name-generation.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Volumes/evo970/metaverseplus/src/utils/name-generation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/evo970/metaverseplus/src/utils",
        "sourceFileName": "name-generation.js"
      }
    },
    "ast": null,
    "code": "const adjectives = [\"able\", \"absolute\", \"acceptable\", \"acclaimed\", \"accomplished\", \"accurate\", \"aching\", \"acrobatic\", \"adorable\", \"adventurous\", \"basic\", \"belated\", \"beloved\", \"calm\", \"candid\", \"capital\", \"carefree\", \"caring\", \"cautious\", \"celebrated\", \"charming\", \"daring\", \"darling\", \"dearest\", \"each\", \"eager\", \"early\", \"earnest\", \"easy\", \"easygoing\", \"ecstatic\", \"edible\", \"fabulous\", \"fair\", \"faithful\", \"familiar\", \"famous\", \"fancy\", \"fantastic\", \"far\", \"generous\", \"gentle\", \"genuine\", \"giant\", \"handmade\", \"handsome\", \"handy\", \"happy\", \"icy\", \"ideal\", \"identical\", \"keen\", \"lasting\", \"lavish\", \"magnificent\", \"majestic\", \"mammoth\", \"marvelous\", \"natural\", \"obedient\", \"palatable\", \"parched\", \"passionate\", \"pastel\", \"peaceful\", \"perfect\", \"perfumed\", \"quaint\", \"qualified\", \"radiant\", \"rapid\", \"rare\", \"safe\", \"sandy\", \"satisfied\", \"scaly\", \"scarce\", \"scared\", \"scary\", \"scented\", \"scientific\", \"secret\", \"sentimental\", \"talkative\", \"tangible\", \"tart\", \"tasty\", \"tattered\", \"teeming\", \"ultimate\", \"uncommon\", \"unconscious\", \"understated\", \"warm\", \"active\", \"adept\", \"admirable\", \"admired\", \"adorable\", \"adored\", \"advanced\", \"affectionate\", \"beneficial\", \"best\", \"better\", \"big\", \"cheerful\", \"cheery\", \"chief\", \"chilly\", \"classic\", \"clean\", \"clear\", \"clever\", \"decent\", \"decisive\", \"deep\", \"defiant\", \"definitive\", \"delectable\", \"delicious\", \"elaborate\", \"elastic\", \"elated\", \"elegant\", \"elementary\", \"elliptical\", \"fast\", \"favorable\", \"favorite\", \"fearless\", \"gifted\", \"glamorous\", \"gleaming\", \"glittering\", \"harmonious\", \"imaginative\", \"immense\", \"jealous\", \"kind\", \"leafy\", \"legal\", \"mature\", \"mean\", \"nautical\", \"neat\", \"necessary\", \"needy\", \"oddball\", \"offbeat\", \"periodic\", \"perky\", \"personal\", \"pertinent\", \"petty\", \"quarterly\", \"ready\", \"real\", \"realistic\", \"reasonable\", \"regal\", \"serene\", \"shabby\", \"sharp\", \"shiny\", \"showy\", \"shy\", \"silky\", \"tempting\", \"tense\", \"terrific\", \"testy\", \"thankful\", \"uniform\", \"unique\", \"vast\", \"weary\", \"wee\", \"welcome\", \"agile\", \"alarmed\", \"alert\", \"alive\", \"bleak\", \"blissful\", \"blushing\", \"coarse\", \"colorful\", \"colossal\", \"comfortable\", \"compassionate\", \"complete\", \"delightful\", \"dense\", \"dependable\", \"dependent\", \"descriptive\", \"detailed\", \"determined\", \"devoted\", \"different\", \"eminent\", \"emotional\", \"enchanted\", \"enchanting\", \"energetic\", \"enormous\", \"fine\", \"finished\", \"firm\", \"firsthand\", \"fixed\", \"flashy\", \"flawless\", \"glorious\", \"glossy\", \"golden\", \"good\", \"gorgeous\", \"graceful\", \"healthy\", \"heartfelt\", \"hearty\", \"helpful\", \"impartial\", \"impressive\", \"jolly\", \"jovial\", \"lighthearted\", \"likable\", \"lined\", \"mellow\", \"melodic\", \"memorable\", \"mild\", \"new\", \"opulent\", \"playful\", \"pleasant\", \"pleasing\", \"plump\", \"plush\", \"polished\", \"polite\", \"reliable\", \"relieved\", \"remarkable\", \"remote\", \"respectful\", \"responsible\", \"simple\", \"simplistic\", \"sizzling\", \"sleepy\", \"slight\", \"slim\", \"smart\", \"smooth\", \"snappy\", \"snoopy\", \"thirsty\", \"this\", \"thorough\", \"those\", \"thoughtful\", \"united\", \"vibrant\", \"vicious\", \"wellmade\", \"whimsical\", \"whirlwind\", \"zesty\", \"amazing\", \"ambitious\", \"ample\", \"amused\", \"amusing\", \"ancient\", \"angelic\", \"antique\", \"bold\", \"bossy\", \"both\", \"bouncy\", \"bountiful\", \"complex\", \"conscious\", \"considerate\", \"constant\", \"content\", \"conventional\", \"cooked\", \"cool\", \"cooperative\", \"diligent\", \"dimwitted\", \"direct\", \"discrete\", \"envious\", \"essential\", \"ethical\", \"euphoric\", \"flippant\", \"fluffy\", \"flustered\", \"focused\", \"fond\", \"gracious\", \"grand\", \"grandiose\", \"granular\", \"grateful\", \"grave\", \"great\", \"hidden\", \"high\", \"hilarious\", \"homely\", \"incomparable\", \"incredible\", \"infamous\", \"joyful\", \"lively\", \"loathsome\", \"lonely\", \"long\", \"mindless\", \"miniature\", \"minor\", \"misty\", \"next\", \"nice\", \"nifty\", \"nimble\", \"orderly\", \"organic\", \"ornate\", \"popular\", \"posh\", \"positive\", \"potable\", \"powerful\", \"powerless\", \"precious\", \"present\", \"prestigious\", \"quick\", \"rewarding\", \"rich\", \"right\", \"sociable\", \"soft\", \"solid\", \"some\", \"sophisticated\", \"soulful\", \"sparkling\", \"spectacular\", \"speedy\", \"spicy\", \"spiffy\", \"spirited\", \"spiteful\", \"splendid\", \"spotless\", \"spry\", \"thrifty\", \"tidy\", \"tight\", \"timely\", \"tinted\", \"unruly\", \"untimely\", \"violet\", \"wicked\", \"wide\", \"wild\", \"willing\", \"winding\", \"windy\", \"zigzag\", \"apprehensive\", \"appropriate\", \"artistic\", \"assured\", \"astonishing\", \"bright\", \"brilliant\", \"bronze\", \"coordinated\", \"courageous\", \"courteous\", \"crafty\", \"crazy\", \"creamy\", \"creative\", \"crisp\", \"distant\", \"distinct\", \"downright\", \"evergreen\", \"everlasting\", \"every\", \"evil\", \"excellent\", \"excitable\", \"exemplary\", \"exhausted\", \"forthright\", \"fortunate\", \"fragrant\", \"frank\", \"free\", \"frequent\", \"fresh\", \"friendly\", \"frightened\", \"frigid\", \"gripping\", \"grounded\", \"honest\", \"honorable\", \"honored\", \"hopeful\", \"hospitable\", \"hot\", \"huge\", \"infatuated\", \"infinite\", \"informal\", \"insistent\", \"instructive\", \"juicy\", \"jumbo\", \"knowing\", \"knowledgeable\", \"longterm\", \"loud\", \"lovable\", \"loving\", \"modern\", \"modest\", \"monumental\", \"normal\", \"notable\", \"outgoing\", \"precious\", \"pretty\", \"prickly\", \"primary\", \"pristine\", \"private\", \"prize\", \"productive\", \"profitable\", \"quiet\", \"quintessential\", \"roasted\", \"robust\", \"square\", \"squiggly\", \"stable\", \"staid\", \"starry\", \"steel\", \"stimulating\", \"striking\", \"striped\", \"strong\", \"studious\", \"stunning\", \"tough\", \"trained\", \"treasured\", \"tremendous\", \"triangular\", \"tricky\", \"unused\", \"unusual\", \"upbeat\", \"virtual\", \"witty\", \"wonderful\", \"wooden\", \"worldly\", \"youthful\", \"attached\", \"attentive\", \"attractive\", \"austere\", \"authentic\", \"automatic\", \"aware\", \"awesome\", \"bubbly\", \"bustling\", \"busy\", \"buttery\", \"cuddly\", \"cultured\", \"curly\", \"curvy\", \"cute\", \"cylindrical\", \"downright\", \"dramatic\", \"excited\", \"exciting\", \"exotic\", \"experienced\", \"expert\", \"frosty\", \"fruitful\", \"full\", \"fumbling\", \"funny\", \"fussy\", \"growing\", \"grown\", \"gummy\", \"humble\", \"humongous\", \"hungry\", \"intelligent\", \"interesting\", \"known\", \"kooky\", \"loyal\", \"lucky\", \"luminous\", \"lustrous\", \"luxurious\", \"multicolored\", \"mysterious\", \"noteworthy\", \"numb\", \"nutritious\", \"outstanding\", \"overjoyed\", \"proper\", \"proud\", \"prudent\", \"punctual\", \"puny\", \"pure\", \"puzzled\", \"puzzling\", \"quirky\", \"stupendous\", \"sturdy\", \"stylish\", \"subdued\", \"subtle\", \"sunny\", \"super\", \"superb\", \"supportive\", \"surprised\", \"sweet\", \"swift\", \"sympathetic\", \"trivial\", \"trusting\", \"trustworthy\", \"trusty\", \"truthful\", \"twin\", \"usable\", \"used\", \"useful\", \"utilized\", \"vital\", \"vivid\", \"worried\", \"worthwhile\", \"worthy\", \"writhing\", \"wry\", \"yummy\", \"chocolate\", \"crimson\", \"cyan\", \"fuchsia\", \"gold\", \"honeydew\", \"lime\", \"linen\", \"magenta\", \"olive\", \"peru\", \"salmon\", \"seashell\", \"sienna\", \"snow\", \"thistle\", \"tomato\", \"transparent\", \"turquoise\", \"violet\"];\nconst nouns = [\"space\", \"land\", \"world\", \"universe\", \"plane\", \"room\", \"nation\", \"plaza\", \"gathering\", \"meetup\", \"get together\", \"conclave\", \"party\", \"domain\", \"dominion\", \"realm\", \"square\", \"commons\", \"park\", \"cosmos\", \"sphere\", \"terrain\", \"spot\", \"zone\", \"area\", \"tract\", \"turf\", \"place\", \"territory\", \"volume\", \"camp\", \"picnic\", \"outing\", \"vacation\", \"adventure\", \"exploration\", \"outing\", \"walkabout\", \"safari\", \"venture\", \"roundtable\", \"barbecue\", \"celebration\", \"festivity\", \"gala\", \"shindig\", \"social\", \"convention\", \"assembly\", \"congregation\", \"rendezvous\", \"huddle\", \"meet\", \"soiree\"];\nexport function generateHubName() {\n  const randItem = set => {\n    const s = set[Math.floor(Math.random() * set.length)];\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  };\n\n  return `${randItem(adjectives)} ${randItem(adjectives)} ${randItem(nouns)}`;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "name-generation.js"
      ],
      "names": [
        "adjectives",
        "nouns",
        "generateHubName",
        "randItem",
        "set",
        "s",
        "Math",
        "floor",
        "random",
        "length",
        "charAt",
        "toUpperCase",
        "slice"
      ],
      "mappings": "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",
      "sourceRoot": "/Volumes/evo970/metaverseplus/src/utils",
      "sourcesContent": [
        "const adjectives = [\n  \"able\",\n  \"absolute\",\n  \"acceptable\",\n  \"acclaimed\",\n  \"accomplished\",\n  \"accurate\",\n  \"aching\",\n  \"acrobatic\",\n  \"adorable\",\n  \"adventurous\",\n  \"basic\",\n  \"belated\",\n  \"beloved\",\n  \"calm\",\n  \"candid\",\n  \"capital\",\n  \"carefree\",\n  \"caring\",\n  \"cautious\",\n  \"celebrated\",\n  \"charming\",\n  \"daring\",\n  \"darling\",\n  \"dearest\",\n  \"each\",\n  \"eager\",\n  \"early\",\n  \"earnest\",\n  \"easy\",\n  \"easygoing\",\n  \"ecstatic\",\n  \"edible\",\n  \"fabulous\",\n  \"fair\",\n  \"faithful\",\n  \"familiar\",\n  \"famous\",\n  \"fancy\",\n  \"fantastic\",\n  \"far\",\n  \"generous\",\n  \"gentle\",\n  \"genuine\",\n  \"giant\",\n  \"handmade\",\n  \"handsome\",\n  \"handy\",\n  \"happy\",\n  \"icy\",\n  \"ideal\",\n  \"identical\",\n  \"keen\",\n  \"lasting\",\n  \"lavish\",\n  \"magnificent\",\n  \"majestic\",\n  \"mammoth\",\n  \"marvelous\",\n  \"natural\",\n  \"obedient\",\n  \"palatable\",\n  \"parched\",\n  \"passionate\",\n  \"pastel\",\n  \"peaceful\",\n  \"perfect\",\n  \"perfumed\",\n  \"quaint\",\n  \"qualified\",\n  \"radiant\",\n  \"rapid\",\n  \"rare\",\n  \"safe\",\n  \"sandy\",\n  \"satisfied\",\n  \"scaly\",\n  \"scarce\",\n  \"scared\",\n  \"scary\",\n  \"scented\",\n  \"scientific\",\n  \"secret\",\n  \"sentimental\",\n  \"talkative\",\n  \"tangible\",\n  \"tart\",\n  \"tasty\",\n  \"tattered\",\n  \"teeming\",\n  \"ultimate\",\n  \"uncommon\",\n  \"unconscious\",\n  \"understated\",\n  \"warm\",\n  \"active\",\n  \"adept\",\n  \"admirable\",\n  \"admired\",\n  \"adorable\",\n  \"adored\",\n  \"advanced\",\n  \"affectionate\",\n  \"beneficial\",\n  \"best\",\n  \"better\",\n  \"big\",\n  \"cheerful\",\n  \"cheery\",\n  \"chief\",\n  \"chilly\",\n  \"classic\",\n  \"clean\",\n  \"clear\",\n  \"clever\",\n  \"decent\",\n  \"decisive\",\n  \"deep\",\n  \"defiant\",\n  \"definitive\",\n  \"delectable\",\n  \"delicious\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elegant\",\n  \"elementary\",\n  \"elliptical\",\n  \"fast\",\n  \"favorable\",\n  \"favorite\",\n  \"fearless\",\n  \"gifted\",\n  \"glamorous\",\n  \"gleaming\",\n  \"glittering\",\n  \"harmonious\",\n  \"imaginative\",\n  \"immense\",\n  \"jealous\",\n  \"kind\",\n  \"leafy\",\n  \"legal\",\n  \"mature\",\n  \"mean\",\n  \"nautical\",\n  \"neat\",\n  \"necessary\",\n  \"needy\",\n  \"oddball\",\n  \"offbeat\",\n  \"periodic\",\n  \"perky\",\n  \"personal\",\n  \"pertinent\",\n  \"petty\",\n  \"quarterly\",\n  \"ready\",\n  \"real\",\n  \"realistic\",\n  \"reasonable\",\n  \"regal\",\n  \"serene\",\n  \"shabby\",\n  \"sharp\",\n  \"shiny\",\n  \"showy\",\n  \"shy\",\n  \"silky\",\n  \"tempting\",\n  \"tense\",\n  \"terrific\",\n  \"testy\",\n  \"thankful\",\n  \"uniform\",\n  \"unique\",\n  \"vast\",\n  \"weary\",\n  \"wee\",\n  \"welcome\",\n  \"agile\",\n  \"alarmed\",\n  \"alert\",\n  \"alive\",\n  \"bleak\",\n  \"blissful\",\n  \"blushing\",\n  \"coarse\",\n  \"colorful\",\n  \"colossal\",\n  \"comfortable\",\n  \"compassionate\",\n  \"complete\",\n  \"delightful\",\n  \"dense\",\n  \"dependable\",\n  \"dependent\",\n  \"descriptive\",\n  \"detailed\",\n  \"determined\",\n  \"devoted\",\n  \"different\",\n  \"eminent\",\n  \"emotional\",\n  \"enchanted\",\n  \"enchanting\",\n  \"energetic\",\n  \"enormous\",\n  \"fine\",\n  \"finished\",\n  \"firm\",\n  \"firsthand\",\n  \"fixed\",\n  \"flashy\",\n  \"flawless\",\n  \"glorious\",\n  \"glossy\",\n  \"golden\",\n  \"good\",\n  \"gorgeous\",\n  \"graceful\",\n  \"healthy\",\n  \"heartfelt\",\n  \"hearty\",\n  \"helpful\",\n  \"impartial\",\n  \"impressive\",\n  \"jolly\",\n  \"jovial\",\n  \"lighthearted\",\n  \"likable\",\n  \"lined\",\n  \"mellow\",\n  \"melodic\",\n  \"memorable\",\n  \"mild\",\n  \"new\",\n  \"opulent\",\n  \"playful\",\n  \"pleasant\",\n  \"pleasing\",\n  \"plump\",\n  \"plush\",\n  \"polished\",\n  \"polite\",\n  \"reliable\",\n  \"relieved\",\n  \"remarkable\",\n  \"remote\",\n  \"respectful\",\n  \"responsible\",\n  \"simple\",\n  \"simplistic\",\n  \"sizzling\",\n  \"sleepy\",\n  \"slight\",\n  \"slim\",\n  \"smart\",\n  \"smooth\",\n  \"snappy\",\n  \"snoopy\",\n  \"thirsty\",\n  \"this\",\n  \"thorough\",\n  \"those\",\n  \"thoughtful\",\n  \"united\",\n  \"vibrant\",\n  \"vicious\",\n  \"wellmade\",\n  \"whimsical\",\n  \"whirlwind\",\n  \"zesty\",\n  \"amazing\",\n  \"ambitious\",\n  \"ample\",\n  \"amused\",\n  \"amusing\",\n  \"ancient\",\n  \"angelic\",\n  \"antique\",\n  \"bold\",\n  \"bossy\",\n  \"both\",\n  \"bouncy\",\n  \"bountiful\",\n  \"complex\",\n  \"conscious\",\n  \"considerate\",\n  \"constant\",\n  \"content\",\n  \"conventional\",\n  \"cooked\",\n  \"cool\",\n  \"cooperative\",\n  \"diligent\",\n  \"dimwitted\",\n  \"direct\",\n  \"discrete\",\n  \"envious\",\n  \"essential\",\n  \"ethical\",\n  \"euphoric\",\n  \"flippant\",\n  \"fluffy\",\n  \"flustered\",\n  \"focused\",\n  \"fond\",\n  \"gracious\",\n  \"grand\",\n  \"grandiose\",\n  \"granular\",\n  \"grateful\",\n  \"grave\",\n  \"great\",\n  \"hidden\",\n  \"high\",\n  \"hilarious\",\n  \"homely\",\n  \"incomparable\",\n  \"incredible\",\n  \"infamous\",\n  \"joyful\",\n  \"lively\",\n  \"loathsome\",\n  \"lonely\",\n  \"long\",\n  \"mindless\",\n  \"miniature\",\n  \"minor\",\n  \"misty\",\n  \"next\",\n  \"nice\",\n  \"nifty\",\n  \"nimble\",\n  \"orderly\",\n  \"organic\",\n  \"ornate\",\n  \"popular\",\n  \"posh\",\n  \"positive\",\n  \"potable\",\n  \"powerful\",\n  \"powerless\",\n  \"precious\",\n  \"present\",\n  \"prestigious\",\n  \"quick\",\n  \"rewarding\",\n  \"rich\",\n  \"right\",\n  \"sociable\",\n  \"soft\",\n  \"solid\",\n  \"some\",\n  \"sophisticated\",\n  \"soulful\",\n  \"sparkling\",\n  \"spectacular\",\n  \"speedy\",\n  \"spicy\",\n  \"spiffy\",\n  \"spirited\",\n  \"spiteful\",\n  \"splendid\",\n  \"spotless\",\n  \"spry\",\n  \"thrifty\",\n  \"tidy\",\n  \"tight\",\n  \"timely\",\n  \"tinted\",\n  \"unruly\",\n  \"untimely\",\n  \"violet\",\n  \"wicked\",\n  \"wide\",\n  \"wild\",\n  \"willing\",\n  \"winding\",\n  \"windy\",\n  \"zigzag\",\n  \"apprehensive\",\n  \"appropriate\",\n  \"artistic\",\n  \"assured\",\n  \"astonishing\",\n  \"bright\",\n  \"brilliant\",\n  \"bronze\",\n  \"coordinated\",\n  \"courageous\",\n  \"courteous\",\n  \"crafty\",\n  \"crazy\",\n  \"creamy\",\n  \"creative\",\n  \"crisp\",\n  \"distant\",\n  \"distinct\",\n  \"downright\",\n  \"evergreen\",\n  \"everlasting\",\n  \"every\",\n  \"evil\",\n  \"excellent\",\n  \"excitable\",\n  \"exemplary\",\n  \"exhausted\",\n  \"forthright\",\n  \"fortunate\",\n  \"fragrant\",\n  \"frank\",\n  \"free\",\n  \"frequent\",\n  \"fresh\",\n  \"friendly\",\n  \"frightened\",\n  \"frigid\",\n  \"gripping\",\n  \"grounded\",\n  \"honest\",\n  \"honorable\",\n  \"honored\",\n  \"hopeful\",\n  \"hospitable\",\n  \"hot\",\n  \"huge\",\n  \"infatuated\",\n  \"infinite\",\n  \"informal\",\n  \"insistent\",\n  \"instructive\",\n  \"juicy\",\n  \"jumbo\",\n  \"knowing\",\n  \"knowledgeable\",\n  \"longterm\",\n  \"loud\",\n  \"lovable\",\n  \"loving\",\n  \"modern\",\n  \"modest\",\n  \"monumental\",\n  \"normal\",\n  \"notable\",\n  \"outgoing\",\n  \"precious\",\n  \"pretty\",\n  \"prickly\",\n  \"primary\",\n  \"pristine\",\n  \"private\",\n  \"prize\",\n  \"productive\",\n  \"profitable\",\n  \"quiet\",\n  \"quintessential\",\n  \"roasted\",\n  \"robust\",\n  \"square\",\n  \"squiggly\",\n  \"stable\",\n  \"staid\",\n  \"starry\",\n  \"steel\",\n  \"stimulating\",\n  \"striking\",\n  \"striped\",\n  \"strong\",\n  \"studious\",\n  \"stunning\",\n  \"tough\",\n  \"trained\",\n  \"treasured\",\n  \"tremendous\",\n  \"triangular\",\n  \"tricky\",\n  \"unused\",\n  \"unusual\",\n  \"upbeat\",\n  \"virtual\",\n  \"witty\",\n  \"wonderful\",\n  \"wooden\",\n  \"worldly\",\n  \"youthful\",\n  \"attached\",\n  \"attentive\",\n  \"attractive\",\n  \"austere\",\n  \"authentic\",\n  \"automatic\",\n  \"aware\",\n  \"awesome\",\n  \"bubbly\",\n  \"bustling\",\n  \"busy\",\n  \"buttery\",\n  \"cuddly\",\n  \"cultured\",\n  \"curly\",\n  \"curvy\",\n  \"cute\",\n  \"cylindrical\",\n  \"downright\",\n  \"dramatic\",\n  \"excited\",\n  \"exciting\",\n  \"exotic\",\n  \"experienced\",\n  \"expert\",\n  \"frosty\",\n  \"fruitful\",\n  \"full\",\n  \"fumbling\",\n  \"funny\",\n  \"fussy\",\n  \"growing\",\n  \"grown\",\n  \"gummy\",\n  \"humble\",\n  \"humongous\",\n  \"hungry\",\n  \"intelligent\",\n  \"interesting\",\n  \"known\",\n  \"kooky\",\n  \"loyal\",\n  \"lucky\",\n  \"luminous\",\n  \"lustrous\",\n  \"luxurious\",\n  \"multicolored\",\n  \"mysterious\",\n  \"noteworthy\",\n  \"numb\",\n  \"nutritious\",\n  \"outstanding\",\n  \"overjoyed\",\n  \"proper\",\n  \"proud\",\n  \"prudent\",\n  \"punctual\",\n  \"puny\",\n  \"pure\",\n  \"puzzled\",\n  \"puzzling\",\n  \"quirky\",\n  \"stupendous\",\n  \"sturdy\",\n  \"stylish\",\n  \"subdued\",\n  \"subtle\",\n  \"sunny\",\n  \"super\",\n  \"superb\",\n  \"supportive\",\n  \"surprised\",\n  \"sweet\",\n  \"swift\",\n  \"sympathetic\",\n  \"trivial\",\n  \"trusting\",\n  \"trustworthy\",\n  \"trusty\",\n  \"truthful\",\n  \"twin\",\n  \"usable\",\n  \"used\",\n  \"useful\",\n  \"utilized\",\n  \"vital\",\n  \"vivid\",\n  \"worried\",\n  \"worthwhile\",\n  \"worthy\",\n  \"writhing\",\n  \"wry\",\n  \"yummy\",\n  \"chocolate\",\n  \"crimson\",\n  \"cyan\",\n  \"fuchsia\",\n  \"gold\",\n  \"honeydew\",\n  \"lime\",\n  \"linen\",\n  \"magenta\",\n  \"olive\",\n  \"peru\",\n  \"salmon\",\n  \"seashell\",\n  \"sienna\",\n  \"snow\",\n  \"thistle\",\n  \"tomato\",\n  \"transparent\",\n  \"turquoise\",\n  \"violet\"\n];\n\nconst nouns = [\n  \"space\",\n  \"land\",\n  \"world\",\n  \"universe\",\n  \"plane\",\n  \"room\",\n  \"nation\",\n  \"plaza\",\n  \"gathering\",\n  \"meetup\",\n  \"get together\",\n  \"conclave\",\n  \"party\",\n  \"domain\",\n  \"dominion\",\n  \"realm\",\n  \"square\",\n  \"commons\",\n  \"park\",\n  \"cosmos\",\n  \"sphere\",\n  \"terrain\",\n  \"spot\",\n  \"zone\",\n  \"area\",\n  \"tract\",\n  \"turf\",\n  \"place\",\n  \"territory\",\n  \"volume\",\n  \"camp\",\n  \"picnic\",\n  \"outing\",\n  \"vacation\",\n  \"adventure\",\n  \"exploration\",\n  \"outing\",\n  \"walkabout\",\n  \"safari\",\n  \"venture\",\n  \"roundtable\",\n  \"barbecue\",\n  \"celebration\",\n  \"festivity\",\n  \"gala\",\n  \"shindig\",\n  \"social\",\n  \"convention\",\n  \"assembly\",\n  \"congregation\",\n  \"rendezvous\",\n  \"huddle\",\n  \"meet\",\n  \"soiree\"\n];\n\nexport function generateHubName() {\n  const randItem = set => {\n    const s = set[Math.floor(Math.random() * set.length)];\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  };\n\n  return `${randItem(adjectives)} ${randItem(adjectives)} ${randItem(nouns)}`;\n}\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1655189689000
  },
  "{\"sourceRoot\":\"/Volumes/evo970/metaverseplus/src/utils\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Volumes/evo970/metaverseplus\",\"filename\":\"/Volumes/evo970/metaverseplus/src/utils/configs.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/evo970/metaverseplus\",\"plugins\":[],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Volumes/evo970/metaverseplus/src/utils",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Volumes/evo970/metaverseplus",
      "filename": "/Volumes/evo970/metaverseplus/src/utils/configs.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Volumes/evo970/metaverseplus",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/evo970/metaverseplus/src/utils/configs.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Volumes/evo970/metaverseplus/src/utils/configs.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/evo970/metaverseplus/src/utils",
        "sourceFileName": "configs.js"
      }
    },
    "ast": null,
    "code": "import appLogo from \"../assets/images/app-logo.png\";\nimport appLogoDark from \"../assets/images/app-logo-dark.png\";\nimport companyLogo from \"../assets/images/company-logo.png\";\nimport homeHeroBackground from \"../assets/images/home-hero-background-unbranded.png\";\nimport sceneEditorLogo from \"../assets/images/editor-logo.png\";\nimport { getLocale, getMessage } from \"./i18n\"; // Read configs from global variable if available, otherwise use the process.env injected from build.\n\nconst configs = {};\nlet isAdmin = false;\n[\"RETICULUM_SERVER\", \"THUMBNAIL_SERVER\", \"CORS_PROXY_SERVER\", \"NON_CORS_PROXY_DOMAINS\", \"SENTRY_DSN\", \"GA_TRACKING_ID\", \"SHORTLINK_DOMAIN\", \"BASE_ASSETS_PATH\", \"UPLOADS_HOST\"].forEach(x => {\n  const el = document.querySelector(`meta[name='env:${x.toLowerCase()}']`);\n  configs[x] = el ? el.getAttribute(\"content\") : process.env[x];\n  const BASE_ASSETS_PATH_KEY = \"BASE_ASSETS_PATH\";\n\n  if (x === BASE_ASSETS_PATH_KEY && configs[BASE_ASSETS_PATH_KEY]) {\n    // BASE_ASSETS_PATH might be a relative URL like \"/\" when it is set in\n    // .env or .defaults.env when running locally. We need to convert that\n    // to an absolute URL.\n    if (!configs[BASE_ASSETS_PATH_KEY].startsWith(\"http\")) {\n      configs[BASE_ASSETS_PATH_KEY] = new URL(configs[BASE_ASSETS_PATH_KEY], window.location).toString();\n    } // eslint-disable-next-line no-undef\n\n\n    __webpack_public_path__ = configs[BASE_ASSETS_PATH_KEY];\n  }\n}); // Custom clients do not use <meta> tags for passing data, so if thumbnail_server meta tag exists, it is not a custom client\n\nconst hasThumbnailServerMetaTag = !!document.querySelector(\"meta[name='env:thumbnail_server']\");\nconfigs.IS_LOCAL_OR_CUSTOM_CLIENT = !hasThumbnailServerMetaTag; // Also include configs that reticulum injects as a script in the page head.\n\nconfigs.AVAILABLE_INTEGRATIONS = window.AVAILABLE_INTEGRATIONS || {};\n\nif (process.env.APP_CONFIG) {\n  window.APP_CONFIG = process.env.APP_CONFIG;\n}\n\nif (window.APP_CONFIG) {\n  configs.APP_CONFIG = window.APP_CONFIG;\n  const {\n    theme\n  } = configs.APP_CONFIG;\n\n  if (theme) {\n    const colorVars = [];\n\n    for (const key in theme) {\n      if (!theme.hasOwnProperty(key)) continue;\n      colorVars.push(`--${key}: ${theme[key]};`);\n    }\n\n    const style = document.createElement(\"style\");\n    style.innerHTML = `:root{${colorVars.join(\"\\n\")}}`;\n    document.head.insertBefore(style, document.head.firstChild);\n  }\n\n  if (!configs.APP_CONFIG.features) {\n    configs.APP_CONFIG.features = {};\n  }\n} else {\n  configs.APP_CONFIG = {\n    features: {}\n  };\n}\n\nconst isLocalDevelopment = process.env.NODE_ENV === \"development\";\n\nconfigs.feature = featureName => {\n  const value = configs.APP_CONFIG && configs.APP_CONFIG.features && configs.APP_CONFIG.features[featureName];\n\n  if (typeof value === \"boolean\" || featureName === \"enable_spoke\") {\n    const forceEnableSpoke = featureName === \"enable_spoke\" && isAdmin;\n    return forceEnableSpoke || value;\n  } else {\n    return value;\n  }\n};\n\nlet localDevImages = {};\n\nif (isLocalDevelopment) {\n  localDevImages = {\n    logo: appLogo,\n    logo_dark: appLogoDark,\n    company_logo: companyLogo,\n    editor_logo: sceneEditorLogo,\n    home_background: homeHeroBackground\n  };\n}\n\nconfigs.image = (imageName, cssUrl) => {\n  const url = configs.APP_CONFIG && configs.APP_CONFIG.images && configs.APP_CONFIG.images[imageName] || localDevImages[imageName];\n  return url && cssUrl ? `url(${url})` : url;\n};\n\nconfigs.link = (linkName, defaultValue) => {\n  return configs.APP_CONFIG && configs.APP_CONFIG.links && configs.APP_CONFIG.links[linkName] || defaultValue;\n};\n\nconfigs.setIsAdmin = _isAdmin => {\n  isAdmin = _isAdmin;\n};\n\nconfigs.isAdmin = () => isAdmin;\n\nconfigs.integration = integration => {\n  const availableIntegrations = configs.AVAILABLE_INTEGRATIONS; // AVAILABLE_INTEGRATIONS has no properties defined on the dev server, but does support all integrations.\n\n  return !availableIntegrations.hasOwnProperty(integration) || availableIntegrations[integration];\n};\n\nconfigs.translation = key => {\n  const locale = getLocale();\n  const translationsConfig = configs.APP_CONFIG && configs.APP_CONFIG.translations || {};\n  return translationsConfig[locale] && translationsConfig[locale][key] || translationsConfig.en && translationsConfig.en[key] || getMessage(key) || \"\";\n};\n\nexport default configs;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZ3MuanMiXSwibmFtZXMiOlsiYXBwTG9nbyIsImFwcExvZ29EYXJrIiwiY29tcGFueUxvZ28iLCJob21lSGVyb0JhY2tncm91bmQiLCJzY2VuZUVkaXRvckxvZ28iLCJnZXRMb2NhbGUiLCJnZXRNZXNzYWdlIiwiY29uZmlncyIsImlzQWRtaW4iLCJmb3JFYWNoIiwieCIsImVsIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwidG9Mb3dlckNhc2UiLCJnZXRBdHRyaWJ1dGUiLCJwcm9jZXNzIiwiZW52IiwiQkFTRV9BU1NFVFNfUEFUSF9LRVkiLCJzdGFydHNXaXRoIiwiVVJMIiwid2luZG93IiwibG9jYXRpb24iLCJ0b1N0cmluZyIsIl9fd2VicGFja19wdWJsaWNfcGF0aF9fIiwiaGFzVGh1bWJuYWlsU2VydmVyTWV0YVRhZyIsIklTX0xPQ0FMX09SX0NVU1RPTV9DTElFTlQiLCJBVkFJTEFCTEVfSU5URUdSQVRJT05TIiwiQVBQX0NPTkZJRyIsInRoZW1lIiwiY29sb3JWYXJzIiwia2V5IiwiaGFzT3duUHJvcGVydHkiLCJwdXNoIiwic3R5bGUiLCJjcmVhdGVFbGVtZW50IiwiaW5uZXJIVE1MIiwiam9pbiIsImhlYWQiLCJpbnNlcnRCZWZvcmUiLCJmaXJzdENoaWxkIiwiZmVhdHVyZXMiLCJpc0xvY2FsRGV2ZWxvcG1lbnQiLCJOT0RFX0VOViIsImZlYXR1cmUiLCJmZWF0dXJlTmFtZSIsInZhbHVlIiwiZm9yY2VFbmFibGVTcG9rZSIsImxvY2FsRGV2SW1hZ2VzIiwibG9nbyIsImxvZ29fZGFyayIsImNvbXBhbnlfbG9nbyIsImVkaXRvcl9sb2dvIiwiaG9tZV9iYWNrZ3JvdW5kIiwiaW1hZ2UiLCJpbWFnZU5hbWUiLCJjc3NVcmwiLCJ1cmwiLCJpbWFnZXMiLCJsaW5rIiwibGlua05hbWUiLCJkZWZhdWx0VmFsdWUiLCJsaW5rcyIsInNldElzQWRtaW4iLCJfaXNBZG1pbiIsImludGVncmF0aW9uIiwiYXZhaWxhYmxlSW50ZWdyYXRpb25zIiwidHJhbnNsYXRpb24iLCJsb2NhbGUiLCJ0cmFuc2xhdGlvbnNDb25maWciLCJ0cmFuc2xhdGlvbnMiLCJlbiJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsT0FBUCxNQUFvQiwrQkFBcEI7QUFDQSxPQUFPQyxXQUFQLE1BQXdCLG9DQUF4QjtBQUNBLE9BQU9DLFdBQVAsTUFBd0IsbUNBQXhCO0FBQ0EsT0FBT0Msa0JBQVAsTUFBK0IscURBQS9CO0FBQ0EsT0FBT0MsZUFBUCxNQUE0QixrQ0FBNUI7QUFDQSxTQUFTQyxTQUFULEVBQW9CQyxVQUFwQixRQUFzQyxRQUF0QyxDLENBRUE7O0FBQ0EsTUFBTUMsT0FBTyxHQUFHLEVBQWhCO0FBQ0EsSUFBSUMsT0FBTyxHQUFHLEtBQWQ7QUFDQSxDQUNFLGtCQURGLEVBRUUsa0JBRkYsRUFHRSxtQkFIRixFQUlFLHdCQUpGLEVBS0UsWUFMRixFQU1FLGdCQU5GLEVBT0Usa0JBUEYsRUFRRSxrQkFSRixFQVNFLGNBVEYsRUFVRUMsT0FWRixDQVVVQyxDQUFDLElBQUk7QUFDYixRQUFNQyxFQUFFLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBVCxDQUF3QixrQkFBaUJILENBQUMsQ0FBQ0ksV0FBRixFQUFnQixJQUF6RCxDQUFYO0FBQ0FQLEVBQUFBLE9BQU8sQ0FBQ0csQ0FBRCxDQUFQLEdBQWFDLEVBQUUsR0FBR0EsRUFBRSxDQUFDSSxZQUFILENBQWdCLFNBQWhCLENBQUgsR0FBZ0NDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZUCxDQUFaLENBQS9DO0FBRUEsUUFBTVEsb0JBQW9CLEdBQUcsa0JBQTdCOztBQUNBLE1BQUlSLENBQUMsS0FBS1Esb0JBQU4sSUFBOEJYLE9BQU8sQ0FBQ1csb0JBQUQsQ0FBekMsRUFBaUU7QUFDL0Q7QUFDQTtBQUNBO0FBQ0EsUUFBSSxDQUFDWCxPQUFPLENBQUNXLG9CQUFELENBQVAsQ0FBOEJDLFVBQTlCLENBQXlDLE1BQXpDLENBQUwsRUFBdUQ7QUFDckRaLE1BQUFBLE9BQU8sQ0FBQ1csb0JBQUQsQ0FBUCxHQUFnQyxJQUFJRSxH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QixDQUFDbEMsY0FBdEIsQ0FBcUNpQyxXQUFyQyxDQUFELElBQXNEQyxxQkFBcUIsQ0FBQ0QsV0FBRCxDQUFsRjtBQUNELENBSkQ7O0FBTUExRCxPQUFPLENBQUM0RCxXQUFSLEdBQXNCcEMsR0FBRyxJQUFJO0FBQzNCLFFBQU1xQyxNQUFNLEdBQUcvRCxTQUFTLEVBQXhCO0FBQ0EsUUFBTWdFLGtCQUFrQixHQUFJOUQsT0FBTyxDQUFDcUIsVUFBUixJQUFzQnJCLE9BQU8sQ0FBQ3FCLFVBQVIsQ0FBbUIwQyxZQUExQyxJQUEyRCxFQUF0RjtBQUVBLFNBQ0dELGtCQUFrQixDQUFDRCxNQUFELENBQWxCLElBQThCQyxrQkFBa0IsQ0FBQ0QsTUFBRCxDQUFsQixDQUEyQnJDLEdBQTNCLENBQS9CLElBQ0NzQyxrQkFBa0IsQ0FBQ0UsRUFBbkIsSUFBeUJGLGtCQUFrQixDQUFDRSxFQUFuQixDQUFzQnhDLEdBQXRCLENBRDFCLElBRUF6QixVQUFVLENBQUN5QixHQUFELENBRlYsSUFHQSxFQUpGO0FBTUQsQ0FWRDs7QUFZQSxlQUFleEIsT0FBZiIsInNvdXJjZVJvb3QiOiIvVm9sdW1lcy9ldm85NzAvbWV0YXZlcnNlcGx1cy9zcmMvdXRpbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXBwTG9nbyBmcm9tIFwiLi4vYXNzZXRzL2ltYWdlcy9hcHAtbG9nby5wbmdcIjtcbmltcG9ydCBhcHBMb2dvRGFyayBmcm9tIFwiLi4vYXNzZXRzL2ltYWdlcy9hcHAtbG9nby1kYXJrLnBuZ1wiO1xuaW1wb3J0IGNvbXBhbnlMb2dvIGZyb20gXCIuLi9hc3NldHMvaW1hZ2VzL2NvbXBhbnktbG9nby5wbmdcIjtcbmltcG9ydCBob21lSGVyb0JhY2tncm91bmQgZnJvbSBcIi4uL2Fzc2V0cy9pbWFnZXMvaG9tZS1oZXJvLWJhY2tncm91bmQtdW5icmFuZGVkLnBuZ1wiO1xuaW1wb3J0IHNjZW5lRWRpdG9yTG9nbyBmcm9tIFwiLi4vYXNzZXRzL2ltYWdlcy9lZGl0b3ItbG9nby5wbmdcIjtcbmltcG9ydCB7IGdldExvY2FsZSwgZ2V0TWVzc2FnZSB9IGZyb20gXCIuL2kxOG5cIjtcblxuLy8gUmVhZCBjb25maWdzIGZyb20gZ2xvYmFsIHZhcmlhYmxlIGlmIGF2YWlsYWJsZSwgb3RoZXJ3aXNlIHVzZSB0aGUgcHJvY2Vzcy5lbnYgaW5qZWN0ZWQgZnJvbSBidWlsZC5cbmNvbnN0IGNvbmZpZ3MgPSB7fTtcbmxldCBpc0FkbWluID0gZmFsc2U7XG5bXG4gIFwiUkVUSUNVTFVNX1NFUlZFUlwiLFxuICBcIlRIVU1CTkFJTF9TRVJWRVJcIixcbiAgXCJDT1JTX1BST1hZX1NFUlZFUlwiLFxuICBcIk5PTl9DT1JTX1BST1hZX0RPTUFJTlNcIixcbiAgXCJTRU5UUllfRFNOXCIsXG4gIFwiR0FfVFJBQ0tJTkdfSURcIixcbiAgXCJTSE9SVExJTktfRE9NQUlOXCIsXG4gIFwiQkFTRV9BU1NFVFNfUEFUSFwiLFxuICBcIlVQTE9BRFNfSE9TVFwiXG5dLmZvckVhY2goeCA9PiB7XG4gIGNvbnN0IGVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgbWV0YVtuYW1lPSdlbnY6JHt4LnRvTG93ZXJDYXNlKCl9J11gKTtcbiAgY29uZmlnc1t4XSA9IGVsID8gZWwuZ2V0QXR0cmlidXRlKFwiY29udGVudFwiKSA6IHByb2Nlc3MuZW52W3hdO1xuXG4gIGNvbnN0IEJBU0VfQVNTRVRTX1BBVEhfS0VZID0gXCJCQVNFX0FTU0VUU19QQVRIXCI7XG4gIGlmICh4ID09PSBCQVNFX0FTU0VUU19QQVRIX0tFWSAmJiBjb25maWdzW0JBU0VfQVNTRVRTX1BBVEhfS0VZXSkge1xuICAgIC8vIEJBU0VfQVNTRVRTX1BBVEggbWlnaHQgYmUgYSByZWxhdGl2ZSBVUkwgbGlrZSBcIi9cIiB3aGVuIGl0IGlzIHNldCBpblxuICAgIC8vIC5lbnYgb3IgLmRlZmF1bHRzLmVudiB3aGVuIHJ1bm5pbmcgbG9jYWxseS4gV2UgbmVlZCB0byBjb252ZXJ0IHRoYXRcbiAgICAvLyB0byBhbiBhYnNvbHV0ZSBVUkwuXG4gICAgaWYgKCFjb25maWdzW0JBU0VfQVNTRVRTX1BBVEhfS0VZXS5zdGFydHNXaXRoKFwiaHR0cFwiKSkge1xuICAgICAgY29uZmlnc1tCQVNFX0FTU0VUU19QQVRIX0tFWV0gPSBuZXcgVVJMKGNvbmZpZ3NbQkFTRV9BU1NFVFNfUEFUSF9LRVldLCB3aW5kb3cubG9jYXRpb24pLnRvU3RyaW5nKCk7XG4gICAgfVxuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gICAgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gPSBjb25maWdzW0JBU0VfQVNTRVRTX1BBVEhfS0VZXTtcbiAgfVxufSk7XG5cbi8vIEN1c3RvbSBjbGllbnRzIGRvIG5vdCB1c2UgPG1ldGE+IHRhZ3MgZm9yIHBhc3NpbmcgZGF0YSwgc28gaWYgdGh1bWJuYWlsX3NlcnZlciBtZXRhIHRhZyBleGlzdHMsIGl0IGlzIG5vdCBhIGN1c3RvbSBjbGllbnRcbmNvbnN0IGhhc1RodW1ibmFpbFNlcnZlck1ldGFUYWcgPSAhIWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJtZXRhW25hbWU9J2Vudjp0aHVtYm5haWxfc2VydmVyJ11cIik7XG5jb25maWdzLklTX0xPQ0FMX09SX0NVU1RPTV9DTElFTlQgPSAhaGFzVGh1bWJuYWlsU2VydmVyTWV0YVRhZztcblxuLy8gQWxzbyBpbmNsdWRlIGNvbmZpZ3MgdGhhdCByZXRpY3VsdW0gaW5qZWN0cyBhcyBhIHNjcmlwdCBpbiB0aGUgcGFnZSBoZWFkLlxuXG5jb25maWdzLkFWQUlMQUJMRV9JTlRFR1JBVElPTlMgPSB3aW5kb3cuQVZBSUxBQkxFX0lOVEVHUkFUSU9OUyB8fCB7fTtcblxuaWYgKHByb2Nlc3MuZW52LkFQUF9DT05GSUcpIHtcbiAgd2luZG93LkFQUF9DT05GSUcgPSBwcm9jZXNzLmVudi5BUFBfQ09ORklHO1xufVxuXG5pZiAod2luZG93LkFQUF9DT05GSUcpIHtcbiAgY29uZmlncy5BUFBfQ09ORklHID0gd2luZG93LkFQUF9DT05GSUc7XG4gIGNvbnN0IHsgdGhlbWUgfSA9IGNvbmZpZ3MuQVBQX0NPTkZJRztcbiAgaWYgKHRoZW1lKSB7XG4gICAgY29uc3QgY29sb3JWYXJzID0gW107XG4gICAgZm9yIChjb25zdCBrZXkgaW4gdGhlbWUpIHtcbiAgICAgIGlmICghdGhlbWUuaGFzT3duUHJvcGVydHkoa2V5KSkgY29udGludWU7XG4gICAgICBjb2xvclZhcnMucHVzaChgLS0ke2tleX06ICR7dGhlbWVba2V5XX07YCk7XG4gICAgfVxuICAgIGNvbnN0IHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICAgIHN0eWxlLmlubmVySFRNTCA9IGA6cm9vdHske2NvbG9yVmFycy5qb2luKFwiXFxuXCIpfX1gO1xuICAgIGRvY3VtZW50LmhlYWQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBkb2N1bWVudC5oZWFkLmZpcnN0Q2hpbGQpO1xuICB9XG5cbiAgaWYgKCFjb25maWdzLkFQUF9DT05GSUcuZmVhdHVyZXMpIHtcbiAgICBjb25maWdzLkFQUF9DT05GSUcuZmVhdHVyZXMgPSB7fTtcbiAgfVxufSBlbHNlIHtcbiAgY29uZmlncy5BUFBfQ09ORklHID0ge1xuICAgIGZlYXR1cmVzOiB7fVxuICB9O1xufVxuXG5jb25zdCBpc0xvY2FsRGV2ZWxvcG1lbnQgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJkZXZlbG9wbWVudFwiO1xuXG5jb25maWdzLmZlYXR1cmUgPSBmZWF0dXJlTmFtZSA9PiB7XG4gIGNvbnN0IHZhbHVlID0gY29uZmlncy5BUFBfQ09ORklHICYmIGNvbmZpZ3MuQVBQX0NPTkZJRy5mZWF0dXJlcyAmJiBjb25maWdzLkFQUF9DT05GSUcuZmVhdHVyZXNbZmVhdHVyZU5hbWVdO1xuICBpZiAodHlwZW9mIHZhbHVlID09PSBcImJvb2xlYW5cIiB8fCBmZWF0dXJlTmFtZSA9PT0gXCJlbmFibGVfc3Bva2VcIikge1xuICAgIGNvbnN0IGZvcmNlRW5hYmxlU3Bva2UgPSBmZWF0dXJlTmFtZSA9PT0gXCJlbmFibGVfc3Bva2VcIiAmJiBpc0FkbWluO1xuICAgIHJldHVybiBmb3JjZUVuYWJsZVNwb2tlIHx8IHZhbHVlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxufTtcblxubGV0IGxvY2FsRGV2SW1hZ2VzID0ge307XG5pZiAoaXNMb2NhbERldmVsb3BtZW50KSB7XG4gIGxvY2FsRGV2SW1hZ2VzID0ge1xuICAgIGxvZ286IGFwcExvZ28sXG4gICAgbG9nb19kYXJrOiBhcHBMb2dvRGFyayxcbiAgICBjb21wYW55X2xvZ286IGNvbXBhbnlMb2dvLFxuICAgIGVkaXRvcl9sb2dvOiBzY2VuZUVkaXRvckxvZ28sXG4gICAgaG9tZV9iYWNrZ3JvdW5kOiBob21lSGVyb0JhY2tncm91bmRcbiAgfTtcbn1cblxuY29uZmlncy5pbWFnZSA9IChpbWFnZU5hbWUsIGNzc1VybCkgPT4ge1xuICBjb25zdCB1cmwgPVxuICAgIChjb25maWdzLkFQUF9DT05GSUcgJiYgY29uZmlncy5BUFBfQ09ORklHLmltYWdlcyAmJiBjb25maWdzLkFQUF9DT05GSUcuaW1hZ2VzW2ltYWdlTmFtZV0pIHx8XG4gICAgbG9jYWxEZXZJbWFnZXNbaW1hZ2VOYW1lXTtcbiAgcmV0dXJuIHVybCAmJiBjc3NVcmwgPyBgdXJsKCR7dXJsfSlgIDogdXJsO1xufTtcblxuY29uZmlncy5saW5rID0gKGxpbmtOYW1lLCBkZWZhdWx0VmFsdWUpID0+IHtcbiAgcmV0dXJuIChjb25maWdzLkFQUF9DT05GSUcgJiYgY29uZmlncy5BUFBfQ09ORklHLmxpbmtzICYmIGNvbmZpZ3MuQVBQX0NPTkZJRy5saW5rc1tsaW5rTmFtZV0pIHx8IGRlZmF1bHRWYWx1ZTtcbn07XG5cbmNvbmZpZ3Muc2V0SXNBZG1pbiA9IF9pc0FkbWluID0+IHtcbiAgaXNBZG1pbiA9IF9pc0FkbWluO1xufTtcbmNvbmZpZ3MuaXNBZG1pbiA9ICgpID0+IGlzQWRtaW47XG5cbmNvbmZpZ3MuaW50ZWdyYXRpb24gPSBpbnRlZ3JhdGlvbiA9PiB7XG4gIGNvbnN0IGF2YWlsYWJsZUludGVncmF0aW9ucyA9IGNvbmZpZ3MuQVZBSUxBQkxFX0lOVEVHUkFUSU9OUztcbiAgLy8gQVZBSUxBQkxFX0lOVEVHUkFUSU9OUyBoYXMgbm8gcHJvcGVydGllcyBkZWZpbmVkIG9uIHRoZSBkZXYgc2VydmVyLCBidXQgZG9lcyBzdXBwb3J0IGFsbCBpbnRlZ3JhdGlvbnMuXG4gIHJldHVybiAhYXZhaWxhYmxlSW50ZWdyYXRpb25zLmhhc093blByb3BlcnR5KGludGVncmF0aW9uKSB8fCBhdmFpbGFibGVJbnRlZ3JhdGlvbnNbaW50ZWdyYXRpb25dO1xufTtcblxuY29uZmlncy50cmFuc2xhdGlvbiA9IGtleSA9PiB7XG4gIGNvbnN0IGxvY2FsZSA9IGdldExvY2FsZSgpO1xuICBjb25zdCB0cmFuc2xhdGlvbnNDb25maWcgPSAoY29uZmlncy5BUFBfQ09ORklHICYmIGNvbmZpZ3MuQVBQX0NPTkZJRy50cmFuc2xhdGlvbnMpIHx8IHt9O1xuXG4gIHJldHVybiAoXG4gICAgKHRyYW5zbGF0aW9uc0NvbmZpZ1tsb2NhbGVdICYmIHRyYW5zbGF0aW9uc0NvbmZpZ1tsb2NhbGVdW2tleV0pIHx8XG4gICAgKHRyYW5zbGF0aW9uc0NvbmZpZy5lbiAmJiB0cmFuc2xhdGlvbnNDb25maWcuZW5ba2V5XSkgfHxcbiAgICBnZXRNZXNzYWdlKGtleSkgfHxcbiAgICBcIlwiXG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25maWdzO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "configs.js"
      ],
      "names": [
        "appLogo",
        "appLogoDark",
        "companyLogo",
        "homeHeroBackground",
        "sceneEditorLogo",
        "getLocale",
        "getMessage",
        "configs",
        "isAdmin",
        "forEach",
        "x",
        "el",
        "document",
        "querySelector",
        "toLowerCase",
        "getAttribute",
        "process",
        "env",
        "BASE_ASSETS_PATH_KEY",
        "startsWith",
        "URL",
        "window",
        "location",
        "toString",
        "__webpack_public_path__",
        "hasThumbnailServerMetaTag",
        "IS_LOCAL_OR_CUSTOM_CLIENT",
        "AVAILABLE_INTEGRATIONS",
        "APP_CONFIG",
        "theme",
        "colorVars",
        "key",
        "hasOwnProperty",
        "push",
        "style",
        "createElement",
        "innerHTML",
        "join",
        "head",
        "insertBefore",
        "firstChild",
        "features",
        "isLocalDevelopment",
        "NODE_ENV",
        "feature",
        "featureName",
        "value",
        "forceEnableSpoke",
        "localDevImages",
        "logo",
        "logo_dark",
        "company_logo",
        "editor_logo",
        "home_background",
        "image",
        "imageName",
        "cssUrl",
        "url",
        "images",
        "link",
        "linkName",
        "defaultValue",
        "links",
        "setIsAdmin",
        "_isAdmin",
        "integration",
        "availableIntegrations",
        "translation",
        "locale",
        "translationsConfig",
        "translations",
        "en"
      ],
      "mappings": "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",
      "sourceRoot": "/Volumes/evo970/metaverseplus/src/utils",
      "sourcesContent": [
        "import appLogo from \"../assets/images/app-logo.png\";\nimport appLogoDark from \"../assets/images/app-logo-dark.png\";\nimport companyLogo from \"../assets/images/company-logo.png\";\nimport homeHeroBackground from \"../assets/images/home-hero-background-unbranded.png\";\nimport sceneEditorLogo from \"../assets/images/editor-logo.png\";\nimport { getLocale, getMessage } from \"./i18n\";\n\n// Read configs from global variable if available, otherwise use the process.env injected from build.\nconst configs = {};\nlet isAdmin = false;\n[\n  \"RETICULUM_SERVER\",\n  \"THUMBNAIL_SERVER\",\n  \"CORS_PROXY_SERVER\",\n  \"NON_CORS_PROXY_DOMAINS\",\n  \"SENTRY_DSN\",\n  \"GA_TRACKING_ID\",\n  \"SHORTLINK_DOMAIN\",\n  \"BASE_ASSETS_PATH\",\n  \"UPLOADS_HOST\"\n].forEach(x => {\n  const el = document.querySelector(`meta[name='env:${x.toLowerCase()}']`);\n  configs[x] = el ? el.getAttribute(\"content\") : process.env[x];\n\n  const BASE_ASSETS_PATH_KEY = \"BASE_ASSETS_PATH\";\n  if (x === BASE_ASSETS_PATH_KEY && configs[BASE_ASSETS_PATH_KEY]) {\n    // BASE_ASSETS_PATH might be a relative URL like \"/\" when it is set in\n    // .env or .defaults.env when running locally. We need to convert that\n    // to an absolute URL.\n    if (!configs[BASE_ASSETS_PATH_KEY].startsWith(\"http\")) {\n      configs[BASE_ASSETS_PATH_KEY] = new URL(configs[BASE_ASSETS_PATH_KEY], window.location).toString();\n    }\n\n    // eslint-disable-next-line no-undef\n    __webpack_public_path__ = configs[BASE_ASSETS_PATH_KEY];\n  }\n});\n\n// Custom clients do not use <meta> tags for passing data, so if thumbnail_server meta tag exists, it is not a custom client\nconst hasThumbnailServerMetaTag = !!document.querySelector(\"meta[name='env:thumbnail_server']\");\nconfigs.IS_LOCAL_OR_CUSTOM_CLIENT = !hasThumbnailServerMetaTag;\n\n// Also include configs that reticulum injects as a script in the page head.\n\nconfigs.AVAILABLE_INTEGRATIONS = window.AVAILABLE_INTEGRATIONS || {};\n\nif (process.env.APP_CONFIG) {\n  window.APP_CONFIG = process.env.APP_CONFIG;\n}\n\nif (window.APP_CONFIG) {\n  configs.APP_CONFIG = window.APP_CONFIG;\n  const { theme } = configs.APP_CONFIG;\n  if (theme) {\n    const colorVars = [];\n    for (const key in theme) {\n      if (!theme.hasOwnProperty(key)) continue;\n      colorVars.push(`--${key}: ${theme[key]};`);\n    }\n    const style = document.createElement(\"style\");\n    style.innerHTML = `:root{${colorVars.join(\"\\n\")}}`;\n    document.head.insertBefore(style, document.head.firstChild);\n  }\n\n  if (!configs.APP_CONFIG.features) {\n    configs.APP_CONFIG.features = {};\n  }\n} else {\n  configs.APP_CONFIG = {\n    features: {}\n  };\n}\n\nconst isLocalDevelopment = process.env.NODE_ENV === \"development\";\n\nconfigs.feature = featureName => {\n  const value = configs.APP_CONFIG && configs.APP_CONFIG.features && configs.APP_CONFIG.features[featureName];\n  if (typeof value === \"boolean\" || featureName === \"enable_spoke\") {\n    const forceEnableSpoke = featureName === \"enable_spoke\" && isAdmin;\n    return forceEnableSpoke || value;\n  } else {\n    return value;\n  }\n};\n\nlet localDevImages = {};\nif (isLocalDevelopment) {\n  localDevImages = {\n    logo: appLogo,\n    logo_dark: appLogoDark,\n    company_logo: companyLogo,\n    editor_logo: sceneEditorLogo,\n    home_background: homeHeroBackground\n  };\n}\n\nconfigs.image = (imageName, cssUrl) => {\n  const url =\n    (configs.APP_CONFIG && configs.APP_CONFIG.images && configs.APP_CONFIG.images[imageName]) ||\n    localDevImages[imageName];\n  return url && cssUrl ? `url(${url})` : url;\n};\n\nconfigs.link = (linkName, defaultValue) => {\n  return (configs.APP_CONFIG && configs.APP_CONFIG.links && configs.APP_CONFIG.links[linkName]) || defaultValue;\n};\n\nconfigs.setIsAdmin = _isAdmin => {\n  isAdmin = _isAdmin;\n};\nconfigs.isAdmin = () => isAdmin;\n\nconfigs.integration = integration => {\n  const availableIntegrations = configs.AVAILABLE_INTEGRATIONS;\n  // AVAILABLE_INTEGRATIONS has no properties defined on the dev server, but does support all integrations.\n  return !availableIntegrations.hasOwnProperty(integration) || availableIntegrations[integration];\n};\n\nconfigs.translation = key => {\n  const locale = getLocale();\n  const translationsConfig = (configs.APP_CONFIG && configs.APP_CONFIG.translations) || {};\n\n  return (\n    (translationsConfig[locale] && translationsConfig[locale][key]) ||\n    (translationsConfig.en && translationsConfig.en[key]) ||\n    getMessage(key) ||\n    \"\"\n  );\n};\n\nexport default configs;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1655189689000
  }
}